public final class io/ktor/server/application/Application : io/ktor/server/application/ApplicationCallPipeline, kotlinx/coroutines/CoroutineScope {
	public final fun dispose ()V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getEngine ()Lio/ktor/server/engine/ApplicationEngine;
	public final fun getMonitor ()Lio/ktor/events/Events;
	public final fun getParentCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getRootPath ()Ljava/lang/String;
	public final fun setRootPath (Ljava/lang/String;)V
}

public abstract interface class io/ktor/server/application/ApplicationCall : kotlinx/coroutines/CoroutineScope {
	public abstract fun getApplication ()Lio/ktor/server/application/Application;
	public abstract fun getAttributes ()Lio/ktor/util/Attributes;
	public abstract fun getParameters ()Lio/ktor/http/Parameters;
	public abstract fun getRequest ()Lio/ktor/server/request/ApplicationRequest;
	public abstract fun getResponse ()Lio/ktor/server/response/ApplicationResponse;
	public abstract fun receiveNullable (Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun respond (Ljava/lang/Object;Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class io/ktor/server/application/ApplicationCallPipeline : io/ktor/util/pipeline/Pipeline {
	public static final field ApplicationPhase Lio/ktor/server/application/ApplicationCallPipeline$ApplicationPhase;
	public fun <init> (ZLio/ktor/server/application/ApplicationEnvironment;)V
	public synthetic fun <init> (ZLio/ktor/server/application/ApplicationEnvironment;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getDevelopmentMode ()Z
	public final fun getEnvironment ()Lio/ktor/server/application/ApplicationEnvironment;
	public final fun getReceivePipeline ()Lio/ktor/server/request/ApplicationReceivePipeline;
	public final fun getSendPipeline ()Lio/ktor/server/response/ApplicationSendPipeline;
}

public final class io/ktor/server/application/ApplicationCallPipeline$ApplicationPhase {
	public final fun getCall ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getFallback ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getFeatures ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getMonitoring ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getPlugins ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getSetup ()Lio/ktor/util/pipeline/PipelinePhase;
}

public final class io/ktor/server/application/ApplicationCallPipelineKt {
	public static final fun getApplication (Lio/ktor/util/pipeline/PipelineContext;)Lio/ktor/server/application/Application;
	public static final fun getCall (Lio/ktor/util/pipeline/PipelineContext;)Lio/ktor/server/application/PipelineCall;
}

public final class io/ktor/server/application/ApplicationConfigExtensionsKt {
	public static final fun getHost (Lio/ktor/server/config/ApplicationConfig;)Ljava/lang/String;
	public static final fun getPort (Lio/ktor/server/config/ApplicationConfig;)I
}

public abstract interface class io/ktor/server/application/ApplicationEnvironment {
	public abstract fun getClassLoader ()Ljava/lang/ClassLoader;
	public abstract fun getConfig ()Lio/ktor/server/config/ApplicationConfig;
	public abstract fun getLog ()Lorg/slf4j/Logger;
	public abstract fun getMonitor ()Lio/ktor/events/Events;
}

public final class io/ktor/server/application/ApplicationKt {
	public static final fun getLog (Lio/ktor/server/application/Application;)Lorg/slf4j/Logger;
	public static final fun serverConfig (Lio/ktor/server/application/ApplicationEnvironment;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/application/ServerConfig;
	public static synthetic fun serverConfig$default (Lio/ktor/server/application/ApplicationEnvironment;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/application/ServerConfig;
}

public abstract interface class io/ktor/server/application/ApplicationPlugin : io/ktor/server/application/BaseApplicationPlugin {
}

public final class io/ktor/server/application/ApplicationPluginKt {
	public static final fun getPluginRegistry (Lio/ktor/util/pipeline/Pipeline;)Lio/ktor/util/Attributes;
	public static final fun install (Lio/ktor/server/routing/RoutingNode;Lio/ktor/server/application/BaseApplicationPlugin;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static final fun install (Lio/ktor/util/pipeline/Pipeline;Lio/ktor/server/application/Plugin;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public static synthetic fun install$default (Lio/ktor/server/routing/RoutingNode;Lio/ktor/server/application/BaseApplicationPlugin;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun install$default (Lio/ktor/util/pipeline/Pipeline;Lio/ktor/server/application/Plugin;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun plugin (Lio/ktor/util/pipeline/Pipeline;Lio/ktor/server/application/Plugin;)Ljava/lang/Object;
	public static final fun pluginOrNull (Lio/ktor/util/pipeline/Pipeline;Lio/ktor/server/application/Plugin;)Ljava/lang/Object;
	public static final fun uninstall (Lio/ktor/util/pipeline/Pipeline;Lio/ktor/server/application/Plugin;)V
	public static final fun uninstallAllPlugins (Lio/ktor/util/pipeline/Pipeline;)V
	public static final fun uninstallPlugin (Lio/ktor/util/pipeline/Pipeline;Lio/ktor/util/AttributeKey;)V
}

public abstract interface class io/ktor/server/application/BaseApplicationPlugin : io/ktor/server/application/Plugin {
}

public abstract interface class io/ktor/server/application/BaseRouteScopedPlugin : io/ktor/server/application/Plugin {
}

public class io/ktor/server/application/CallContext {
	protected fun getContext ()Lio/ktor/util/pipeline/PipelineContext;
	public final fun getPluginConfig ()Ljava/lang/Object;
}

public final class io/ktor/server/application/CreatePluginUtilsKt {
	public static final fun createApplicationPlugin (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/application/ApplicationPlugin;
	public static final fun createApplicationPlugin (Ljava/lang/String;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/application/ApplicationPlugin;
	public static final fun createApplicationPlugin (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/application/ApplicationPlugin;
	public static final fun createRouteScopedPlugin (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/application/RouteScopedPlugin;
	public static final fun createRouteScopedPlugin (Ljava/lang/String;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/application/RouteScopedPlugin;
	public static final fun createRouteScopedPlugin (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/application/RouteScopedPlugin;
}

public final class io/ktor/server/application/DefaultApplicationEventsKt {
	public static final fun getApplicationStarted ()Lio/ktor/events/EventDefinition;
	public static final fun getApplicationStarting ()Lio/ktor/events/EventDefinition;
	public static final fun getApplicationStopPreparing ()Lio/ktor/events/EventDefinition;
	public static final fun getApplicationStopped ()Lio/ktor/events/EventDefinition;
	public static final fun getApplicationStopping ()Lio/ktor/events/EventDefinition;
	public static final fun getServerReady ()Lio/ktor/events/EventDefinition;
}

public class io/ktor/server/application/DuplicateApplicationPluginException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public final class io/ktor/server/application/DuplicatePluginException : io/ktor/server/application/DuplicateApplicationPluginException {
	public fun <init> (Ljava/lang/String;)V
}

public abstract interface class io/ktor/server/application/Hook {
	public abstract fun install (Lio/ktor/server/application/ApplicationCallPipeline;Ljava/lang/Object;)V
}

public final class io/ktor/server/application/InvalidBodyException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public final class io/ktor/server/application/MissingApplicationPluginException : java/lang/IllegalStateException, kotlinx/coroutines/CopyableThrowable {
	public fun <init> (Lio/ktor/util/AttributeKey;)V
	public fun createCopy ()Lio/ktor/server/application/MissingApplicationPluginException;
	public synthetic fun createCopy ()Ljava/lang/Throwable;
	public final fun getKey ()Lio/ktor/util/AttributeKey;
	public fun getMessage ()Ljava/lang/String;
}

public final class io/ktor/server/application/OnCallContext : io/ktor/server/application/CallContext {
}

public final class io/ktor/server/application/OnCallReceiveContext : io/ktor/server/application/CallContext {
	public final fun transformBody (Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/server/application/OnCallRespondContext : io/ktor/server/application/CallContext {
	public final fun transformBody (Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract interface class io/ktor/server/application/PipelineCall : io/ktor/server/application/ApplicationCall {
	public abstract fun getRequest ()Lio/ktor/server/request/PipelineRequest;
	public abstract fun getResponse ()Lio/ktor/server/response/PipelineResponse;
	public abstract fun receiveNullable (Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun respond (Ljava/lang/Object;Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/server/application/PipelineCall$DefaultImpls {
	public static fun receiveNullable (Lio/ktor/server/application/PipelineCall;Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static fun respond (Lio/ktor/server/application/PipelineCall;Ljava/lang/Object;Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/server/application/PipelineCallKt {
	public static final fun getCall (Lio/ktor/util/pipeline/PipelineContext;)Lio/ktor/server/application/ApplicationCall;
	public static final fun getReceiveType (Lio/ktor/server/application/ApplicationCall;)Lio/ktor/util/reflect/TypeInfo;
	public static final fun isHandled (Lio/ktor/server/application/ApplicationCall;)Z
}

public abstract interface class io/ktor/server/application/Plugin {
	public abstract fun getKey ()Lio/ktor/util/AttributeKey;
	public abstract fun install (Lio/ktor/util/pipeline/Pipeline;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public abstract class io/ktor/server/application/PluginBuilder {
	public abstract fun getApplication ()Lio/ktor/server/application/Application;
	public final fun getApplicationConfig ()Lio/ktor/server/config/ApplicationConfig;
	public final fun getEnvironment ()Lio/ktor/server/application/ApplicationEnvironment;
	public abstract fun getPluginConfig ()Ljava/lang/Object;
	public final fun on (Lio/ktor/server/application/Hook;Ljava/lang/Object;)V
	public final fun onCall (Lkotlin/jvm/functions/Function3;)V
	public final fun onCallReceive (Lkotlin/jvm/functions/Function3;)V
	public final fun onCallReceive (Lkotlin/jvm/functions/Function4;)V
	public final fun onCallRespond (Lkotlin/jvm/functions/Function3;)V
	public final fun onCallRespond (Lkotlin/jvm/functions/Function4;)V
}

public final class io/ktor/server/application/PluginInstance {
}

public abstract interface class io/ktor/server/application/RouteScopedPlugin : io/ktor/server/application/BaseRouteScopedPlugin {
}

public abstract class io/ktor/server/application/RouteScopedPluginBuilder : io/ktor/server/application/PluginBuilder {
	public fun <init> (Lio/ktor/util/AttributeKey;)V
	public abstract fun getRoute ()Lio/ktor/server/routing/RoutingNode;
}

public final class io/ktor/server/application/RouteScopedPluginKt {
	public static final fun findPluginInRoute (Lio/ktor/server/routing/RoutingNode;Lio/ktor/server/application/Plugin;)Ljava/lang/Object;
}

public final class io/ktor/server/application/ServerConfig {
	public final fun getDevelopmentMode ()Z
	public final fun getEnvironment ()Lio/ktor/server/application/ApplicationEnvironment;
	public final fun getParentCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getRootPath ()Ljava/lang/String;
}

public final class io/ktor/server/application/ServerConfigBuilder {
	public fun <init> (Lio/ktor/server/application/ApplicationEnvironment;)V
	public final fun getDevelopmentMode ()Z
	public final fun getEnvironment ()Lio/ktor/server/application/ApplicationEnvironment;
	public final fun getParentCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getRootPath ()Ljava/lang/String;
	public final fun getWatchPaths ()Ljava/util/List;
	public final fun module (Lkotlin/jvm/functions/Function1;)V
	public final fun setDevelopmentMode (Z)V
	public final fun setParentCoroutineContext (Lkotlin/coroutines/CoroutineContext;)V
	public final fun setRootPath (Ljava/lang/String;)V
	public final fun setWatchPaths (Ljava/util/List;)V
}

public final class io/ktor/server/application/TransformBodyContext {
	public fun <init> (Lio/ktor/util/reflect/TypeInfo;)V
	public final fun getRequestedType ()Lio/ktor/util/reflect/TypeInfo;
}

public final class io/ktor/server/application/hooks/BeforeResponseTransform : io/ktor/server/application/Hook {
	public fun <init> (Lkotlin/reflect/KClass;)V
	public synthetic fun install (Lio/ktor/server/application/ApplicationCallPipeline;Ljava/lang/Object;)V
	public fun install (Lio/ktor/server/application/ApplicationCallPipeline;Lkotlin/jvm/functions/Function3;)V
}

public final class io/ktor/server/application/hooks/CallFailed : io/ktor/server/application/Hook {
	public static final field INSTANCE Lio/ktor/server/application/hooks/CallFailed;
	public synthetic fun install (Lio/ktor/server/application/ApplicationCallPipeline;Ljava/lang/Object;)V
	public fun install (Lio/ktor/server/application/ApplicationCallPipeline;Lkotlin/jvm/functions/Function3;)V
}

public final class io/ktor/server/application/hooks/CallSetup : io/ktor/server/application/Hook {
	public static final field INSTANCE Lio/ktor/server/application/hooks/CallSetup;
	public synthetic fun install (Lio/ktor/server/application/ApplicationCallPipeline;Ljava/lang/Object;)V
	public fun install (Lio/ktor/server/application/ApplicationCallPipeline;Lkotlin/jvm/functions/Function2;)V
}

public final class io/ktor/server/application/hooks/Metrics : io/ktor/server/application/Hook {
	public static final field INSTANCE Lio/ktor/server/application/hooks/Metrics;
	public synthetic fun install (Lio/ktor/server/application/ApplicationCallPipeline;Ljava/lang/Object;)V
	public fun install (Lio/ktor/server/application/ApplicationCallPipeline;Lkotlin/jvm/functions/Function2;)V
}

public final class io/ktor/server/application/hooks/MonitoringEvent : io/ktor/server/application/Hook {
	public fun <init> (Lio/ktor/events/EventDefinition;)V
	public synthetic fun install (Lio/ktor/server/application/ApplicationCallPipeline;Ljava/lang/Object;)V
	public fun install (Lio/ktor/server/application/ApplicationCallPipeline;Lkotlin/jvm/functions/Function1;)V
}

public final class io/ktor/server/application/hooks/ReceiveRequestBytes : io/ktor/server/application/Hook {
	public static final field INSTANCE Lio/ktor/server/application/hooks/ReceiveRequestBytes;
	public synthetic fun install (Lio/ktor/server/application/ApplicationCallPipeline;Ljava/lang/Object;)V
	public fun install (Lio/ktor/server/application/ApplicationCallPipeline;Lkotlin/jvm/functions/Function2;)V
}

public final class io/ktor/server/application/hooks/ResponseBodyReadyForSend : io/ktor/server/application/Hook {
	public static final field INSTANCE Lio/ktor/server/application/hooks/ResponseBodyReadyForSend;
	public synthetic fun install (Lio/ktor/server/application/ApplicationCallPipeline;Ljava/lang/Object;)V
	public fun install (Lio/ktor/server/application/ApplicationCallPipeline;Lkotlin/jvm/functions/Function4;)V
}

public final class io/ktor/server/application/hooks/ResponseBodyReadyForSend$Context {
	public fun <init> (Lio/ktor/util/pipeline/PipelineContext;)V
	public final fun transformBodyTo (Lio/ktor/http/content/OutgoingContent;)V
}

public final class io/ktor/server/application/hooks/ResponseSent : io/ktor/server/application/Hook {
	public static final field INSTANCE Lio/ktor/server/application/hooks/ResponseSent;
	public synthetic fun install (Lio/ktor/server/application/ApplicationCallPipeline;Ljava/lang/Object;)V
	public fun install (Lio/ktor/server/application/ApplicationCallPipeline;Lkotlin/jvm/functions/Function1;)V
}

public abstract interface class io/ktor/server/config/ApplicationConfig {
	public abstract fun config (Ljava/lang/String;)Lio/ktor/server/config/ApplicationConfig;
	public abstract fun configList (Ljava/lang/String;)Ljava/util/List;
	public abstract fun keys ()Ljava/util/Set;
	public abstract fun property (Ljava/lang/String;)Lio/ktor/server/config/ApplicationConfigValue;
	public abstract fun propertyOrNull (Ljava/lang/String;)Lio/ktor/server/config/ApplicationConfigValue;
	public abstract fun toMap ()Ljava/util/Map;
}

public final class io/ktor/server/config/ApplicationConfigKt {
	public static final fun tryGetString (Lio/ktor/server/config/ApplicationConfig;Ljava/lang/String;)Ljava/lang/String;
	public static final fun tryGetStringList (Lio/ktor/server/config/ApplicationConfig;Ljava/lang/String;)Ljava/util/List;
}

public abstract interface class io/ktor/server/config/ApplicationConfigValue {
	public abstract fun getList ()Ljava/util/List;
	public abstract fun getString ()Ljava/lang/String;
}

public final class io/ktor/server/config/ApplicationConfigurationException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
}

public abstract interface class io/ktor/server/config/ConfigLoader {
	public static final field Companion Lio/ktor/server/config/ConfigLoader$Companion;
	public abstract fun load (Ljava/lang/String;)Lio/ktor/server/config/ApplicationConfig;
}

public final class io/ktor/server/config/ConfigLoader$Companion {
	public final fun load (Ljava/lang/String;)Lio/ktor/server/config/ApplicationConfig;
	public static synthetic fun load$default (Lio/ktor/server/config/ConfigLoader$Companion;Ljava/lang/String;ILjava/lang/Object;)Lio/ktor/server/config/ApplicationConfig;
}

public final class io/ktor/server/config/ConfigLoadersJvmKt {
	public static final fun getConfigLoaders ()Ljava/util/List;
}

public class io/ktor/server/config/HoconApplicationConfig : io/ktor/server/config/ApplicationConfig {
	public fun <init> (Lcom/typesafe/config/Config;)V
	public fun config (Ljava/lang/String;)Lio/ktor/server/config/ApplicationConfig;
	public fun configList (Ljava/lang/String;)Ljava/util/List;
	public fun keys ()Ljava/util/Set;
	public fun property (Ljava/lang/String;)Lio/ktor/server/config/ApplicationConfigValue;
	public fun propertyOrNull (Ljava/lang/String;)Lio/ktor/server/config/ApplicationConfigValue;
	public fun toMap ()Ljava/util/Map;
}

public final class io/ktor/server/config/HoconApplicationConfigKt {
	public static final fun ApplicationConfig (Ljava/lang/String;)Lio/ktor/server/config/ApplicationConfig;
	public static final fun tryGetString (Lcom/typesafe/config/Config;Ljava/lang/String;)Ljava/lang/String;
	public static final fun tryGetStringList (Lcom/typesafe/config/Config;Ljava/lang/String;)Ljava/util/List;
}

public final class io/ktor/server/config/HoconConfigLoader : io/ktor/server/config/ConfigLoader {
	public fun <init> ()V
	public fun load (Ljava/lang/String;)Lio/ktor/server/config/ApplicationConfig;
}

public class io/ktor/server/config/MapApplicationConfig : io/ktor/server/config/ApplicationConfig {
	public fun <init> ()V
	public fun <init> (Ljava/util/List;)V
	public fun <init> ([Lkotlin/Pair;)V
	public fun config (Ljava/lang/String;)Lio/ktor/server/config/ApplicationConfig;
	public fun configList (Ljava/lang/String;)Ljava/util/List;
	protected final fun getMap ()Ljava/util/Map;
	protected final fun getPath ()Ljava/lang/String;
	public fun keys ()Ljava/util/Set;
	public fun property (Ljava/lang/String;)Lio/ktor/server/config/ApplicationConfigValue;
	public fun propertyOrNull (Ljava/lang/String;)Lio/ktor/server/config/ApplicationConfigValue;
	public final fun put (Ljava/lang/String;Ljava/lang/Iterable;)V
	public final fun put (Ljava/lang/String;Ljava/lang/String;)V
	public fun toMap ()Ljava/util/Map;
}

protected final class io/ktor/server/config/MapApplicationConfig$MapApplicationConfigValue : io/ktor/server/config/ApplicationConfigValue {
	public fun <init> (Ljava/util/Map;Ljava/lang/String;)V
	public fun getList ()Ljava/util/List;
	public final fun getMap ()Ljava/util/Map;
	public final fun getPath ()Ljava/lang/String;
	public fun getString ()Ljava/lang/String;
}

public final class io/ktor/server/config/MergedApplicationConfigKt {
	public static final fun merge (Ljava/util/List;)Lio/ktor/server/config/ApplicationConfig;
	public static final fun mergeWith (Lio/ktor/server/config/ApplicationConfig;Lio/ktor/server/config/ApplicationConfig;)Lio/ktor/server/config/ApplicationConfig;
	public static final fun withFallback (Lio/ktor/server/config/ApplicationConfig;Lio/ktor/server/config/ApplicationConfig;)Lio/ktor/server/config/ApplicationConfig;
}

public abstract interface class io/ktor/server/engine/ApplicationEngine {
	public abstract fun getEnvironment ()Lio/ktor/server/application/ApplicationEnvironment;
	public abstract fun resolvedConnectors (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun start (Z)Lio/ktor/server/engine/ApplicationEngine;
	public abstract fun startSuspend (ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public abstract fun stop (JJ)V
	public abstract fun stopSuspend (JJLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class io/ktor/server/engine/ApplicationEngine$Configuration {
	public fun <init> ()V
	public final fun getCallGroupSize ()I
	public final fun getConnectionGroupSize ()I
	public final fun getConnectors ()Ljava/util/List;
	public final fun getParallelism ()I
	public final fun getShutdownGracePeriod ()J
	public final fun getShutdownTimeout ()J
	public final fun getWorkerGroupSize ()I
	public final fun setCallGroupSize (I)V
	public final fun setConnectionGroupSize (I)V
	public final fun setConnectors (Ljava/util/List;)V
	public final fun setShutdownGracePeriod (J)V
	public final fun setShutdownTimeout (J)V
	public final fun setWorkerGroupSize (I)V
	public final fun takeFrom (Lio/ktor/server/engine/ApplicationEngine$Configuration;)V
}

public final class io/ktor/server/engine/ApplicationEngine$DefaultImpls {
	public static synthetic fun start$default (Lio/ktor/server/engine/ApplicationEngine;ZILjava/lang/Object;)Lio/ktor/server/engine/ApplicationEngine;
	public static fun startSuspend (Lio/ktor/server/engine/ApplicationEngine;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun startSuspend$default (Lio/ktor/server/engine/ApplicationEngine;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun stop$default (Lio/ktor/server/engine/ApplicationEngine;JJILjava/lang/Object;)V
	public static fun stopSuspend (Lio/ktor/server/engine/ApplicationEngine;JJLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun stopSuspend$default (Lio/ktor/server/engine/ApplicationEngine;JJLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class io/ktor/server/engine/ApplicationEngineFactory {
	public abstract fun configuration (Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/ApplicationEngine$Configuration;
	public abstract fun create (Lio/ktor/server/application/ApplicationEnvironment;Lio/ktor/events/Events;ZLio/ktor/server/engine/ApplicationEngine$Configuration;Lkotlin/jvm/functions/Function0;)Lio/ktor/server/engine/ApplicationEngine;
}

public final class io/ktor/server/engine/ApplicationEngineJvmKt {
	public static final fun stop (Lio/ktor/server/engine/ApplicationEngine;JJLjava/util/concurrent/TimeUnit;)V
}

public final class io/ktor/server/engine/ApplicationEnvironmentBuilder {
	public fun <init> ()V
	public final fun build ()Lio/ktor/server/application/ApplicationEnvironment;
	public final fun getClassLoader ()Ljava/lang/ClassLoader;
	public final fun getConfig ()Lio/ktor/server/config/ApplicationConfig;
	public final fun getLog ()Lorg/slf4j/Logger;
	public final fun setClassLoader (Ljava/lang/ClassLoader;)V
	public final fun setConfig (Lio/ktor/server/config/ApplicationConfig;)V
	public final fun setLog (Lorg/slf4j/Logger;)V
}

public final class io/ktor/server/engine/ApplicationEnvironmentBuilderKt {
	public static final fun applicationEnvironment (Lkotlin/jvm/functions/Function1;)Lio/ktor/server/application/ApplicationEnvironment;
	public static synthetic fun applicationEnvironment$default (Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/application/ApplicationEnvironment;
}

public abstract class io/ktor/server/engine/BaseApplicationCall : io/ktor/server/application/PipelineCall {
	public fun <init> (Lio/ktor/server/application/Application;)V
	public final fun getApplication ()Lio/ktor/server/application/Application;
	public final fun getAttributes ()Lio/ktor/util/Attributes;
	public fun getParameters ()Lio/ktor/http/Parameters;
	public abstract fun getRequest ()Lio/ktor/server/engine/BaseApplicationRequest;
	public abstract fun getResponse ()Lio/ktor/server/engine/BaseApplicationResponse;
	protected final fun putResponseAttribute (Lio/ktor/server/engine/BaseApplicationResponse;)V
	public static synthetic fun putResponseAttribute$default (Lio/ktor/server/engine/BaseApplicationCall;Lio/ktor/server/engine/BaseApplicationResponse;ILjava/lang/Object;)V
	public fun receiveNullable (Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun respond (Ljava/lang/Object;Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class io/ktor/server/engine/BaseApplicationEngine : io/ktor/server/engine/ApplicationEngine {
	public fun <init> (Lio/ktor/server/application/ApplicationEnvironment;Lio/ktor/events/Events;ZLio/ktor/server/engine/EnginePipeline;)V
	public synthetic fun <init> (Lio/ktor/server/application/ApplicationEnvironment;Lio/ktor/events/Events;ZLio/ktor/server/engine/EnginePipeline;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getEnvironment ()Lio/ktor/server/application/ApplicationEnvironment;
	protected final fun getMonitor ()Lio/ktor/events/Events;
	public final fun getPipeline ()Lio/ktor/server/engine/EnginePipeline;
	protected final fun getResolvedConnectorsDeferred ()Lkotlinx/coroutines/CompletableDeferred;
	public fun resolvedConnectors (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun startSuspend (ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun stopSuspend (JJLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class io/ktor/server/engine/BaseApplicationEngine$Configuration : io/ktor/server/engine/ApplicationEngine$Configuration {
	public fun <init> ()V
}

public abstract class io/ktor/server/engine/BaseApplicationRequest : io/ktor/server/request/PipelineRequest {
	public fun <init> (Lio/ktor/server/application/PipelineCall;)V
	public synthetic fun getCall ()Lio/ktor/server/application/ApplicationCall;
	public final fun getCall ()Lio/ktor/server/application/PipelineCall;
	protected abstract fun getEngineHeaders ()Lio/ktor/http/Headers;
	protected abstract fun getEngineReceiveChannel ()Lio/ktor/utils/io/ByteReadChannel;
	public final fun getHeaders ()Lio/ktor/http/Headers;
	public fun getPipeline ()Lio/ktor/server/request/ApplicationReceivePipeline;
	public final fun receiveChannel ()Lio/ktor/utils/io/ByteReadChannel;
	public final fun setHeader (Ljava/lang/String;Ljava/util/List;)V
	public final fun setReceiveChannel (Lio/ktor/utils/io/ByteReadChannel;)V
}

public abstract class io/ktor/server/engine/BaseApplicationResponse : io/ktor/server/response/PipelineResponse {
	public static final field Companion Lio/ktor/server/engine/BaseApplicationResponse$Companion;
	public fun <init> (Lio/ktor/server/application/PipelineCall;)V
	protected final fun commitHeaders (Lio/ktor/http/content/OutgoingContent;)V
	public synthetic fun getCall ()Lio/ktor/server/application/ApplicationCall;
	public final fun getCall ()Lio/ktor/server/application/PipelineCall;
	public fun getCookies ()Lio/ktor/server/response/ResponseCookies;
	public final fun getPipeline ()Lio/ktor/server/response/ApplicationSendPipeline;
	public fun isCommitted ()Z
	public final fun isSent ()Z
	public fun push (Lio/ktor/server/response/ResponsePushBuilder;)V
	protected fun respondFromBytes ([BLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected fun respondFromChannel (Lio/ktor/utils/io/ByteReadChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected fun respondNoContent (Lio/ktor/http/content/OutgoingContent$NoContent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected fun respondOutgoingContent (Lio/ktor/http/content/OutgoingContent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun respondUpgrade (Lio/ktor/http/content/OutgoingContent$ProtocolUpgrade;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected fun respondWriteChannelContent (Lio/ktor/http/content/OutgoingContent$WriteChannelContent;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun responseChannel (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	protected abstract fun setStatus (Lio/ktor/http/HttpStatusCode;)V
	public fun status ()Lio/ktor/http/HttpStatusCode;
	public fun status (Lio/ktor/http/HttpStatusCode;)V
}

public final class io/ktor/server/engine/BaseApplicationResponse$BodyLengthIsTooLong : java/lang/IllegalStateException, kotlinx/coroutines/CopyableThrowable {
	public fun <init> (J)V
	public fun createCopy ()Lio/ktor/server/engine/BaseApplicationResponse$BodyLengthIsTooLong;
	public synthetic fun createCopy ()Ljava/lang/Throwable;
}

public final class io/ktor/server/engine/BaseApplicationResponse$BodyLengthIsTooSmall : java/lang/IllegalStateException, kotlinx/coroutines/CopyableThrowable {
	public fun <init> (JJ)V
	public fun createCopy ()Lio/ktor/server/engine/BaseApplicationResponse$BodyLengthIsTooSmall;
	public synthetic fun createCopy ()Ljava/lang/Throwable;
}

public final class io/ktor/server/engine/BaseApplicationResponse$Companion {
	public final fun getEngineResponseAttributeKey ()Lio/ktor/util/AttributeKey;
	public final fun setupSendPipeline (Lio/ktor/server/response/ApplicationSendPipeline;)V
}

public final class io/ktor/server/engine/BaseApplicationResponse$InvalidHeaderForContent : java/lang/IllegalStateException, kotlinx/coroutines/CopyableThrowable {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun createCopy ()Lio/ktor/server/engine/BaseApplicationResponse$InvalidHeaderForContent;
	public synthetic fun createCopy ()Ljava/lang/Throwable;
}

public final class io/ktor/server/engine/BaseApplicationResponse$ResponseAlreadySentException : java/lang/IllegalStateException {
	public fun <init> ()V
}

public final class io/ktor/server/engine/CommandLineConfig {
	public fun <init> (Lio/ktor/server/application/ServerConfig;Lio/ktor/server/engine/BaseApplicationEngine$Configuration;)V
	public final fun getEngineConfig ()Lio/ktor/server/engine/BaseApplicationEngine$Configuration;
	public final fun getEnvironment ()Lio/ktor/server/application/ApplicationEnvironment;
	public final fun getRootConfig ()Lio/ktor/server/application/ServerConfig;
}

public final class io/ktor/server/engine/CommandLineKt {
	public static final fun CommandLineConfig ([Ljava/lang/String;)Lio/ktor/server/engine/CommandLineConfig;
	public static final fun loadCommonConfiguration (Lio/ktor/server/engine/ApplicationEngine$Configuration;Lio/ktor/server/config/ApplicationConfig;)V
}

public final class io/ktor/server/engine/ConfigKeys {
	public static final field INSTANCE Lio/ktor/server/engine/ConfigKeys;
	public static final field applicationIdPath Ljava/lang/String;
	public static final field developmentModeKey Ljava/lang/String;
	public static final field hostConfigPath Ljava/lang/String;
	public static final field hostPortPath Ljava/lang/String;
	public static final field hostSslKeyAlias Ljava/lang/String;
	public static final field hostSslKeyStore Ljava/lang/String;
	public static final field hostSslKeyStorePassword Ljava/lang/String;
	public static final field hostSslPortPath Ljava/lang/String;
	public static final field hostSslPrivateKeyPassword Ljava/lang/String;
	public static final field hostWatchPaths Ljava/lang/String;
	public static final field rootPathPath Ljava/lang/String;
}

public final class io/ktor/server/engine/ConnectorType {
	public static final field Companion Lio/ktor/server/engine/ConnectorType$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/ktor/server/engine/ConnectorType;
	public static synthetic fun copy$default (Lio/ktor/server/engine/ConnectorType;Ljava/lang/String;ILjava/lang/Object;)Lio/ktor/server/engine/ConnectorType;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/engine/ConnectorType$Companion {
	public final fun getHTTP ()Lio/ktor/server/engine/ConnectorType;
	public final fun getHTTPS ()Lio/ktor/server/engine/ConnectorType;
}

public final class io/ktor/server/engine/DefaultEnginePipelineKt {
	public static final fun defaultEnginePipeline (Lio/ktor/server/config/ApplicationConfig;Z)Lio/ktor/server/engine/EnginePipeline;
	public static final fun defaultExceptionStatusCode (Ljava/lang/Throwable;)Lio/ktor/http/HttpStatusCode;
	public static final fun handleFailure (Lio/ktor/server/application/ApplicationCall;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun logError (Lio/ktor/server/application/ApplicationCall;Ljava/lang/Throwable;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/server/engine/DefaultTransformKt {
	public static final fun installDefaultTransformations (Lio/ktor/server/request/ApplicationReceivePipeline;)V
	public static final fun installDefaultTransformations (Lio/ktor/server/response/ApplicationSendPipeline;)V
}

public final class io/ktor/server/engine/DefaultUncaughtExceptionHandler : kotlinx/coroutines/CoroutineExceptionHandler {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public fun <init> (Lorg/slf4j/Logger;)V
	public fun fold (Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
	public fun get (Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;
	public fun getKey ()Lkotlin/coroutines/CoroutineContext$Key;
	public fun handleException (Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V
	public fun minusKey (Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;
	public fun plus (Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;
}

public final class io/ktor/server/engine/EmbeddedServer {
	public fun <init> (Lio/ktor/server/application/ServerConfig;Lio/ktor/server/engine/ApplicationEngineFactory;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lio/ktor/server/application/ServerConfig;Lio/ktor/server/engine/ApplicationEngineFactory;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getApplication ()Lio/ktor/server/application/Application;
	public final fun getEngine ()Lio/ktor/server/engine/ApplicationEngine;
	public final fun getEngineConfig ()Lio/ktor/server/engine/ApplicationEngine$Configuration;
	public final fun getEnvironment ()Lio/ktor/server/application/ApplicationEnvironment;
	public final fun getMonitor ()Lio/ktor/events/Events;
	public final fun reload ()V
	public final fun start (Z)Lio/ktor/server/engine/EmbeddedServer;
	public static synthetic fun start$default (Lio/ktor/server/engine/EmbeddedServer;ZILjava/lang/Object;)Lio/ktor/server/engine/EmbeddedServer;
	public final fun startSuspend (ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun startSuspend$default (Lio/ktor/server/engine/EmbeddedServer;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public final fun stop (JJ)V
	public final fun stop (JJLjava/util/concurrent/TimeUnit;)V
	public static synthetic fun stop$default (Lio/ktor/server/engine/EmbeddedServer;JJILjava/lang/Object;)V
	public final fun stopSuspend (JJLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun stopSuspend$default (Lio/ktor/server/engine/EmbeddedServer;JJLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class io/ktor/server/engine/EmbeddedServerKt {
	public static final fun embeddedServer (Lio/ktor/server/engine/ApplicationEngineFactory;ILjava/lang/String;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/EmbeddedServer;
	public static final fun embeddedServer (Lio/ktor/server/engine/ApplicationEngineFactory;Lio/ktor/server/application/ApplicationEnvironment;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/EmbeddedServer;
	public static final fun embeddedServer (Lio/ktor/server/engine/ApplicationEngineFactory;Lio/ktor/server/application/ServerConfig;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/EmbeddedServer;
	public static final fun embeddedServer (Lkotlinx/coroutines/CoroutineScope;Lio/ktor/server/engine/ApplicationEngineFactory;ILjava/lang/String;Ljava/util/List;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/EmbeddedServer;
	public static final fun embeddedServer (Lkotlinx/coroutines/CoroutineScope;Lio/ktor/server/engine/ApplicationEngineFactory;[Lio/ktor/server/engine/EngineConnectorConfig;Ljava/util/List;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/EmbeddedServer;
	public static synthetic fun embeddedServer$default (Lio/ktor/server/engine/ApplicationEngineFactory;ILjava/lang/String;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/engine/EmbeddedServer;
	public static synthetic fun embeddedServer$default (Lio/ktor/server/engine/ApplicationEngineFactory;Lio/ktor/server/application/ApplicationEnvironment;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/engine/EmbeddedServer;
	public static synthetic fun embeddedServer$default (Lio/ktor/server/engine/ApplicationEngineFactory;Lio/ktor/server/application/ServerConfig;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/engine/EmbeddedServer;
	public static synthetic fun embeddedServer$default (Lkotlinx/coroutines/CoroutineScope;Lio/ktor/server/engine/ApplicationEngineFactory;ILjava/lang/String;Ljava/util/List;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/engine/EmbeddedServer;
	public static synthetic fun embeddedServer$default (Lkotlinx/coroutines/CoroutineScope;Lio/ktor/server/engine/ApplicationEngineFactory;[Lio/ktor/server/engine/EngineConnectorConfig;Ljava/util/List;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/engine/EmbeddedServer;
}

public class io/ktor/server/engine/EngineConnectorBuilder : io/ktor/server/engine/EngineConnectorConfig {
	public fun <init> ()V
	public fun <init> (Lio/ktor/server/engine/ConnectorType;)V
	public synthetic fun <init> (Lio/ktor/server/engine/ConnectorType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getHost ()Ljava/lang/String;
	public fun getPort ()I
	public fun getType ()Lio/ktor/server/engine/ConnectorType;
	public fun setHost (Ljava/lang/String;)V
	public fun setPort (I)V
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/ktor/server/engine/EngineConnectorConfig {
	public abstract fun getHost ()Ljava/lang/String;
	public abstract fun getPort ()I
	public abstract fun getType ()Lio/ktor/server/engine/ConnectorType;
}

public final class io/ktor/server/engine/EngineConnectorConfigJvmKt {
	public static final fun sslConnector (Lio/ktor/server/engine/ApplicationEngine$Configuration;Ljava/security/KeyStore;Ljava/lang/String;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)V
	public static final fun withPort (Lio/ktor/server/engine/EngineConnectorConfig;I)Lio/ktor/server/engine/EngineConnectorConfig;
}

public final class io/ktor/server/engine/EngineConnectorConfigKt {
	public static final fun connector (Lio/ktor/server/engine/ApplicationEngine$Configuration;Lkotlin/jvm/functions/Function1;)V
}

public final class io/ktor/server/engine/EngineContextCancellationHelperKt {
	public static final fun launchOnCancellation (Lkotlinx/coroutines/Job;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/CompletableJob;
	public static final fun stopServerOnCancellation (Lio/ktor/server/engine/ApplicationEngine;Lio/ktor/server/application/Application;JJ)Lkotlinx/coroutines/CompletableJob;
	public static synthetic fun stopServerOnCancellation$default (Lio/ktor/server/engine/ApplicationEngine;Lio/ktor/server/application/Application;JJILjava/lang/Object;)Lkotlinx/coroutines/CompletableJob;
}

public final class io/ktor/server/engine/EnginePipeline : io/ktor/util/pipeline/Pipeline {
	public static final field Companion Lio/ktor/server/engine/EnginePipeline$Companion;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getDevelopmentMode ()Z
	public final fun getReceivePipeline ()Lio/ktor/server/request/ApplicationReceivePipeline;
	public final fun getSendPipeline ()Lio/ktor/server/response/ApplicationSendPipeline;
}

public final class io/ktor/server/engine/EnginePipeline$Companion {
	public final fun getBefore ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getCall ()Lio/ktor/util/pipeline/PipelinePhase;
}

public final class io/ktor/server/engine/EngineSSLConnectorBuilder : io/ktor/server/engine/EngineConnectorBuilder, io/ktor/server/engine/EngineSSLConnectorConfig {
	public fun <init> (Ljava/security/KeyStore;Ljava/lang/String;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)V
	public fun getEnabledProtocols ()Ljava/util/List;
	public fun getKeyAlias ()Ljava/lang/String;
	public fun getKeyStore ()Ljava/security/KeyStore;
	public fun getKeyStorePassword ()Lkotlin/jvm/functions/Function0;
	public fun getKeyStorePath ()Ljava/io/File;
	public fun getPort ()I
	public fun getPrivateKeyPassword ()Lkotlin/jvm/functions/Function0;
	public fun getTrustStore ()Ljava/security/KeyStore;
	public fun getTrustStorePath ()Ljava/io/File;
	public fun setEnabledProtocols (Ljava/util/List;)V
	public fun setKeyAlias (Ljava/lang/String;)V
	public fun setKeyStore (Ljava/security/KeyStore;)V
	public fun setKeyStorePassword (Lkotlin/jvm/functions/Function0;)V
	public fun setKeyStorePath (Ljava/io/File;)V
	public fun setPort (I)V
	public fun setPrivateKeyPassword (Lkotlin/jvm/functions/Function0;)V
	public fun setTrustStore (Ljava/security/KeyStore;)V
	public fun setTrustStorePath (Ljava/io/File;)V
}

public abstract interface class io/ktor/server/engine/EngineSSLConnectorConfig : io/ktor/server/engine/EngineConnectorConfig {
	public abstract fun getEnabledProtocols ()Ljava/util/List;
	public abstract fun getKeyAlias ()Ljava/lang/String;
	public abstract fun getKeyStore ()Ljava/security/KeyStore;
	public abstract fun getKeyStorePassword ()Lkotlin/jvm/functions/Function0;
	public abstract fun getKeyStorePath ()Ljava/io/File;
	public abstract fun getPrivateKeyPassword ()Lkotlin/jvm/functions/Function0;
	public abstract fun getTrustStore ()Ljava/security/KeyStore;
	public abstract fun getTrustStorePath ()Ljava/io/File;
}

public final class io/ktor/server/engine/ShutDownUrl {
	public static final field Companion Lio/ktor/server/engine/ShutDownUrl$Companion;
	public fun <init> (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public final fun doShutdown (Lio/ktor/server/application/ApplicationCall;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getExitCode ()Lkotlin/jvm/functions/Function1;
	public final fun getUrl ()Ljava/lang/String;
}

public final class io/ktor/server/engine/ShutDownUrl$Companion {
	public final fun getApplicationCallPlugin ()Lio/ktor/server/application/BaseApplicationPlugin;
}

public final class io/ktor/server/engine/ShutDownUrl$Config {
	public fun <init> ()V
	public final fun getExitCodeSupplier ()Lkotlin/jvm/functions/Function1;
	public final fun getShutDownUrl ()Ljava/lang/String;
	public final fun setExitCodeSupplier (Lkotlin/jvm/functions/Function1;)V
	public final fun setShutDownUrl (Ljava/lang/String;)V
}

public final class io/ktor/server/engine/ShutDownUrl$EnginePlugin : io/ktor/server/application/BaseApplicationPlugin {
	public static final field INSTANCE Lio/ktor/server/engine/ShutDownUrl$EnginePlugin;
	public fun getKey ()Lio/ktor/util/AttributeKey;
	public fun install (Lio/ktor/server/engine/EnginePipeline;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/ShutDownUrl;
	public synthetic fun install (Lio/ktor/util/pipeline/Pipeline;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class io/ktor/server/engine/ShutdownHookKt {
	public static final fun addShutdownHook (Lio/ktor/server/engine/EmbeddedServer;Lkotlin/jvm/functions/Function0;)V
}

public final class io/ktor/server/http/HttpDateJvmKt {
	public static final fun getHttpDateFormat ()Ljava/time/format/DateTimeFormatter;
	public static final fun toHttpDateString (Ljava/time/temporal/Temporal;)Ljava/lang/String;
}

public final class io/ktor/server/http/LinkHeaderKt {
	public static final fun link (Lio/ktor/server/response/ApplicationResponse;Lio/ktor/http/LinkHeader;)V
	public static final fun link (Lio/ktor/server/response/ApplicationResponse;Ljava/lang/String;[Ljava/lang/String;)V
}

public final class io/ktor/server/http/PushKt {
	public static final fun push (Lio/ktor/server/application/ApplicationCall;Ljava/lang/String;)V
	public static final fun push (Lio/ktor/server/application/ApplicationCall;Ljava/lang/String;Lio/ktor/http/Parameters;)V
	public static final fun push (Lio/ktor/server/application/ApplicationCall;Lkotlin/jvm/functions/Function1;)V
}

public final class io/ktor/server/http/content/CachingOptionsJvmKt {
	public static final fun CachingOptions (Lio/ktor/http/CacheControl;Ljava/time/ZonedDateTime;)Lio/ktor/http/content/CachingOptions;
	public static synthetic fun CachingOptions$default (Lio/ktor/http/CacheControl;Ljava/time/ZonedDateTime;ILjava/lang/Object;)Lio/ktor/http/content/CachingOptions;
}

public final class io/ktor/server/http/content/CompressedFileType : java/lang/Enum {
	public static final field BROTLI Lio/ktor/server/http/content/CompressedFileType;
	public static final field GZIP Lio/ktor/server/http/content/CompressedFileType;
	public final fun getEncoding ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getExtension ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/server/http/content/CompressedFileType;
	public static fun values ()[Lio/ktor/server/http/content/CompressedFileType;
}

public final class io/ktor/server/http/content/DefaultTransformKt {
	public static final fun transformDefaultContent (Lio/ktor/server/application/ApplicationCall;Ljava/lang/Object;)Lio/ktor/http/content/OutgoingContent;
}

public abstract interface class io/ktor/server/http/content/FileSystemPaths {
	public static final field Companion Lio/ktor/server/http/content/FileSystemPaths$Companion;
	public abstract fun getPath (Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
}

public final class io/ktor/server/http/content/FileSystemPaths$Companion {
	public final fun paths (Ljava/nio/file/FileSystem;)Lio/ktor/server/http/content/FileSystemPaths;
}

public final class io/ktor/server/http/content/HttpStatusCodeContent : io/ktor/http/content/OutgoingContent$NoContent {
	public fun <init> (Lio/ktor/http/HttpStatusCode;)V
	public fun getStatus ()Lio/ktor/http/HttpStatusCode;
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/http/content/JarFileContent : io/ktor/http/content/OutgoingContent$ReadChannelContent {
	public fun <init> (Ljava/io/File;Ljava/lang/String;Lio/ktor/http/ContentType;)V
	public fun <init> (Ljava/nio/file/Path;Ljava/lang/String;Lio/ktor/http/ContentType;)V
	public fun getContentLength ()Ljava/lang/Long;
	public fun getContentType ()Lio/ktor/http/ContentType;
	public final fun getJarFile ()Ljava/io/File;
	public final fun getResourcePath ()Ljava/lang/String;
	public final fun isFile ()Z
	public fun readFrom ()Lio/ktor/utils/io/ByteReadChannel;
}

public final class io/ktor/server/http/content/LastModifiedJavaTimeKt {
	public static final fun LastModifiedVersion (J)Lio/ktor/http/content/LastModifiedVersion;
	public static final fun LastModifiedVersion (Ljava/nio/file/attribute/FileTime;)Lio/ktor/http/content/LastModifiedVersion;
	public static final fun LastModifiedVersion (Ljava/time/ZonedDateTime;)Lio/ktor/http/content/LastModifiedVersion;
}

public final class io/ktor/server/http/content/LocalFileContent : io/ktor/http/content/OutgoingContent$ReadChannelContent {
	public fun <init> (Ljava/io/File;Lio/ktor/http/ContentType;)V
	public synthetic fun <init> (Ljava/io/File;Lio/ktor/http/ContentType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getContentLength ()Ljava/lang/Long;
	public fun getContentType ()Lio/ktor/http/ContentType;
	public final fun getFile ()Ljava/io/File;
	public fun readFrom ()Lio/ktor/utils/io/ByteReadChannel;
	public fun readFrom (Lkotlin/ranges/LongRange;)Lio/ktor/utils/io/ByteReadChannel;
}

public final class io/ktor/server/http/content/LocalFileContentKt {
	public static final fun LocalFileContent (Ljava/io/File;Ljava/lang/String;Lio/ktor/http/ContentType;)Lio/ktor/server/http/content/LocalFileContent;
	public static final fun LocalFileContent (Ljava/nio/file/Path;Ljava/nio/file/Path;Lio/ktor/http/ContentType;)Lio/ktor/server/http/content/LocalPathContent;
	public static synthetic fun LocalFileContent$default (Ljava/io/File;Ljava/lang/String;Lio/ktor/http/ContentType;ILjava/lang/Object;)Lio/ktor/server/http/content/LocalFileContent;
	public static synthetic fun LocalFileContent$default (Ljava/nio/file/Path;Ljava/nio/file/Path;Lio/ktor/http/ContentType;ILjava/lang/Object;)Lio/ktor/server/http/content/LocalPathContent;
	public static final fun LocalPathContent (Ljava/nio/file/Path;Ljava/nio/file/Path;Lio/ktor/http/ContentType;)Lio/ktor/server/http/content/LocalPathContent;
	public static synthetic fun LocalPathContent$default (Ljava/nio/file/Path;Ljava/nio/file/Path;Lio/ktor/http/ContentType;ILjava/lang/Object;)Lio/ktor/server/http/content/LocalPathContent;
}

public final class io/ktor/server/http/content/LocalPathContent : io/ktor/http/content/OutgoingContent$ReadChannelContent {
	public fun <init> (Ljava/nio/file/Path;Lio/ktor/http/ContentType;)V
	public synthetic fun <init> (Ljava/nio/file/Path;Lio/ktor/http/ContentType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getContentLength ()Ljava/lang/Long;
	public fun getContentType ()Lio/ktor/http/ContentType;
	public final fun getPath ()Ljava/nio/file/Path;
	public fun readFrom ()Lio/ktor/utils/io/ByteReadChannel;
	public fun readFrom (Lkotlin/ranges/LongRange;)Lio/ktor/utils/io/ByteReadChannel;
}

public final class io/ktor/server/http/content/SPAConfig {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getApplicationRoute ()Ljava/lang/String;
	public final fun getDefaultPage ()Ljava/lang/String;
	public final fun getFilesPath ()Ljava/lang/String;
	public final fun getUseResources ()Z
	public final fun setApplicationRoute (Ljava/lang/String;)V
	public final fun setDefaultPage (Ljava/lang/String;)V
	public final fun setFilesPath (Ljava/lang/String;)V
	public final fun setUseResources (Z)V
}

public final class io/ktor/server/http/content/SinglePageApplicationKt {
	public static final fun angular (Lio/ktor/server/http/content/SPAConfig;Ljava/lang/String;)V
	public static final fun backbone (Lio/ktor/server/http/content/SPAConfig;Ljava/lang/String;)V
	public static final fun ember (Lio/ktor/server/http/content/SPAConfig;Ljava/lang/String;)V
	public static final fun ignoreFiles (Lio/ktor/server/http/content/SPAConfig;Lkotlin/jvm/functions/Function1;)V
	public static final fun react (Lio/ktor/server/http/content/SPAConfig;Ljava/lang/String;)V
	public static final fun singlePageApplication (Lio/ktor/server/routing/Route;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun singlePageApplication$default (Lio/ktor/server/routing/Route;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static final fun vue (Lio/ktor/server/http/content/SPAConfig;Ljava/lang/String;)V
}

public final class io/ktor/server/http/content/StaticContentConfig {
	public final fun cacheControl (Lkotlin/jvm/functions/Function1;)V
	public final fun contentType (Lkotlin/jvm/functions/Function1;)V
	public final fun default (Ljava/lang/String;)V
	public final fun enableAutoHeadResponse ()V
	public final fun exclude (Lkotlin/jvm/functions/Function1;)V
	public final fun extensions ([Ljava/lang/String;)V
	public final fun modify (Lkotlin/jvm/functions/Function3;)V
	public final fun preCompressed ([Lio/ktor/server/http/content/CompressedFileType;)V
}

public final class io/ktor/server/http/content/StaticContentKt {
	public static final fun default (Lio/ktor/server/routing/Route;Ljava/io/File;)V
	public static final fun default (Lio/ktor/server/routing/Route;Ljava/lang/String;)V
	public static final fun defaultResource (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/lang/String;)V
	public static synthetic fun defaultResource$default (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public static final fun file (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/io/File;)V
	public static final fun file (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/lang/String;)V
	public static synthetic fun file$default (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public static final fun files (Lio/ktor/server/routing/Route;Ljava/io/File;)V
	public static final fun files (Lio/ktor/server/routing/Route;Ljava/lang/String;)V
	public static final fun getStaticBasePackage (Lio/ktor/server/routing/Route;)Ljava/lang/String;
	public static final fun getStaticFileLocationProperty ()Lio/ktor/util/AttributeKey;
	public static final fun getStaticRootFolder (Lio/ktor/server/routing/Route;)Ljava/io/File;
	public static final fun isStaticContent (Lio/ktor/server/application/ApplicationCall;)Z
	public static final fun preCompressed (Lio/ktor/server/routing/Route;[Lio/ktor/server/http/content/CompressedFileType;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun preCompressed$default (Lio/ktor/server/routing/Route;[Lio/ktor/server/http/content/CompressedFileType;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static final fun resource (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public static synthetic fun resource$default (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public static final fun resources (Lio/ktor/server/routing/Route;Ljava/lang/String;)V
	public static synthetic fun resources$default (Lio/ktor/server/routing/Route;Ljava/lang/String;ILjava/lang/Object;)V
	public static final fun setStaticBasePackage (Lio/ktor/server/routing/Route;Ljava/lang/String;)V
	public static final fun setStaticRootFolder (Lio/ktor/server/routing/Route;Ljava/io/File;)V
	public static final fun static (Lio/ktor/server/routing/Route;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static final fun static (Lio/ktor/server/routing/Route;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static final fun staticFileSystem (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/ktor/server/http/content/FileSystemPaths;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static synthetic fun staticFileSystem$default (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lio/ktor/server/http/content/FileSystemPaths;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/routing/Route;
	public static final fun staticFiles (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/io/File;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static synthetic fun staticFiles$default (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/io/File;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/routing/Route;
	public static final fun staticResources (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static synthetic fun staticResources$default (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/routing/Route;
	public static final fun staticZip (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static synthetic fun staticZip$default (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/routing/Route;
}

public final class io/ktor/server/http/content/StaticContentResolutionKt {
	public static final fun resolveResource (Lio/ktor/server/application/ApplicationCall;Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;Lkotlin/jvm/functions/Function1;)Lio/ktor/http/content/OutgoingContent$ReadChannelContent;
	public static synthetic fun resolveResource$default (Lio/ktor/server/application/ApplicationCall;Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/http/content/OutgoingContent$ReadChannelContent;
	public static final fun resourceClasspathResource (Ljava/net/URL;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/ktor/http/content/OutgoingContent$ReadChannelContent;
}

public final class io/ktor/server/http/content/SuppressionAttributeKt {
	public static final fun getSuppressionAttribute ()Lio/ktor/util/AttributeKey;
	public static final fun isCompressionSuppressed (Lio/ktor/server/application/ApplicationCall;)Z
	public static final fun isDecompressionSuppressed (Lio/ktor/server/application/ApplicationCall;)Z
	public static final fun suppressCompression (Lio/ktor/server/application/ApplicationCall;)V
	public static final fun suppressDecompression (Lio/ktor/server/application/ApplicationCall;)V
}

public final class io/ktor/server/logging/LoggingKt {
	public static final fun getMdcProvider (Lio/ktor/server/application/Application;)Lio/ktor/server/logging/MDCProvider;
	public static final fun toLogString (Lio/ktor/server/request/ApplicationRequest;)Ljava/lang/String;
}

public abstract interface class io/ktor/server/logging/MDCProvider {
	public abstract fun withMDCBlock (Lio/ktor/server/application/ApplicationCall;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public class io/ktor/server/plugins/BadRequestException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class io/ktor/server/plugins/CannotTransformContentToTypeException : io/ktor/server/plugins/ContentTransformationException, kotlinx/coroutines/CopyableThrowable {
	public fun <init> (Lkotlin/reflect/KType;)V
	public fun createCopy ()Lio/ktor/server/plugins/CannotTransformContentToTypeException;
	public synthetic fun createCopy ()Ljava/lang/Throwable;
}

public abstract class io/ktor/server/plugins/ContentTransformationException : java/io/IOException {
	public fun <init> (Ljava/lang/String;)V
}

public final class io/ktor/server/plugins/MissingRequestParameterException : io/ktor/server/plugins/BadRequestException, kotlinx/coroutines/CopyableThrowable {
	public fun <init> (Ljava/lang/String;)V
	public fun createCopy ()Lio/ktor/server/plugins/MissingRequestParameterException;
	public synthetic fun createCopy ()Ljava/lang/Throwable;
	public final fun getParameterName ()Ljava/lang/String;
}

public final class io/ktor/server/plugins/MutableOriginConnectionPoint : io/ktor/http/RequestConnectionPoint {
	public fun getHost ()Ljava/lang/String;
	public fun getLocalAddress ()Ljava/lang/String;
	public fun getLocalHost ()Ljava/lang/String;
	public fun getLocalPort ()I
	public fun getMethod ()Lio/ktor/http/HttpMethod;
	public fun getPort ()I
	public fun getRemoteAddress ()Ljava/lang/String;
	public fun getRemoteHost ()Ljava/lang/String;
	public fun getRemotePort ()I
	public fun getScheme ()Ljava/lang/String;
	public fun getServerHost ()Ljava/lang/String;
	public fun getServerPort ()I
	public fun getUri ()Ljava/lang/String;
	public fun getVersion ()Ljava/lang/String;
	public fun setHost (Ljava/lang/String;)V
	public fun setLocalAddress (Ljava/lang/String;)V
	public fun setLocalHost (Ljava/lang/String;)V
	public fun setLocalPort (I)V
	public fun setMethod (Lio/ktor/http/HttpMethod;)V
	public fun setPort (I)V
	public fun setRemoteAddress (Ljava/lang/String;)V
	public fun setRemoteHost (Ljava/lang/String;)V
	public fun setRemotePort (I)V
	public fun setScheme (Ljava/lang/String;)V
	public fun setServerHost (Ljava/lang/String;)V
	public fun setServerPort (I)V
	public fun setUri (Ljava/lang/String;)V
	public fun setVersion (Ljava/lang/String;)V
}

public final class io/ktor/server/plugins/NotFoundException : java/lang/Exception {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class io/ktor/server/plugins/OriginConnectionPointKt {
	public static final fun getMutableOriginConnectionPoint (Lio/ktor/server/application/ApplicationCall;)Lio/ktor/server/plugins/MutableOriginConnectionPoint;
	public static final fun getMutableOriginConnectionPointKey ()Lio/ktor/util/AttributeKey;
	public static final fun getOrigin (Lio/ktor/server/request/ApplicationRequest;)Lio/ktor/http/RequestConnectionPoint;
}

public final class io/ktor/server/plugins/ParameterConversionException : io/ktor/server/plugins/BadRequestException, kotlinx/coroutines/CopyableThrowable {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun createCopy ()Lio/ktor/server/plugins/ParameterConversionException;
	public synthetic fun createCopy ()Ljava/lang/Throwable;
	public final fun getParameterName ()Ljava/lang/String;
	public final fun getType ()Ljava/lang/String;
}

public final class io/ktor/server/plugins/PayloadTooLargeException : io/ktor/server/plugins/ContentTransformationException, kotlinx/coroutines/CopyableThrowable {
	public fun <init> (J)V
	public fun createCopy ()Lio/ktor/server/plugins/PayloadTooLargeException;
	public synthetic fun createCopy ()Ljava/lang/Throwable;
}

public final class io/ktor/server/plugins/UnsupportedMediaTypeException : io/ktor/server/plugins/ContentTransformationException, kotlinx/coroutines/CopyableThrowable {
	public fun <init> (Lio/ktor/http/ContentType;)V
	public fun createCopy ()Lio/ktor/server/plugins/UnsupportedMediaTypeException;
	public synthetic fun createCopy ()Ljava/lang/Throwable;
}

public final class io/ktor/server/request/ApplicationReceiveFunctionsJvmKt {
	public static final fun getDEFAULT_FORM_FIELD_LIMIT ()J
	public static final fun receiveStream (Lio/ktor/server/application/ApplicationCall;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/server/request/ApplicationReceiveFunctionsKt {
	public static final fun getFormFieldLimit (Lio/ktor/server/application/ApplicationCall;)J
	public static final fun receive (Lio/ktor/server/application/ApplicationCall;Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun receive (Lio/ktor/server/application/ApplicationCall;Lkotlin/reflect/KClass;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun receiveChannel (Lio/ktor/server/application/ApplicationCall;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun receiveMultipart (Lio/ktor/server/application/ApplicationCall;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun receiveMultipart$default (Lio/ktor/server/application/ApplicationCall;JLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun receiveOrNull (Lio/ktor/server/application/ApplicationCall;Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun receiveOrNull (Lio/ktor/server/application/ApplicationCall;Lkotlin/reflect/KClass;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun receiveParameters (Lio/ktor/server/application/ApplicationCall;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun receiveText (Lio/ktor/server/application/ApplicationCall;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun setFormFieldLimit (Lio/ktor/server/application/ApplicationCall;J)V
}

public class io/ktor/server/request/ApplicationReceivePipeline : io/ktor/util/pipeline/Pipeline {
	public static final field Phases Lio/ktor/server/request/ApplicationReceivePipeline$Phases;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getDevelopmentMode ()Z
}

public final class io/ktor/server/request/ApplicationReceivePipeline$Phases {
	public final fun getAfter ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getBefore ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getTransform ()Lio/ktor/util/pipeline/PipelinePhase;
}

public abstract interface class io/ktor/server/request/ApplicationRequest {
	public abstract fun getCall ()Lio/ktor/server/application/ApplicationCall;
	public abstract fun getCookies ()Lio/ktor/server/request/RequestCookies;
	public abstract fun getHeaders ()Lio/ktor/http/Headers;
	public abstract fun getLocal ()Lio/ktor/http/RequestConnectionPoint;
	public abstract fun getQueryParameters ()Lio/ktor/http/Parameters;
	public abstract fun getRawQueryParameters ()Lio/ktor/http/Parameters;
	public abstract fun receiveChannel ()Lio/ktor/utils/io/ByteReadChannel;
}

public final class io/ktor/server/request/ApplicationRequestPropertiesKt {
	public static final fun accept (Lio/ktor/server/request/ApplicationRequest;)Ljava/lang/String;
	public static final fun acceptCharset (Lio/ktor/server/request/ApplicationRequest;)Ljava/lang/String;
	public static final fun acceptCharsetItems (Lio/ktor/server/request/ApplicationRequest;)Ljava/util/List;
	public static final fun acceptEncoding (Lio/ktor/server/request/ApplicationRequest;)Ljava/lang/String;
	public static final fun acceptEncodingItems (Lio/ktor/server/request/ApplicationRequest;)Ljava/util/List;
	public static final fun acceptItems (Lio/ktor/server/request/ApplicationRequest;)Ljava/util/List;
	public static final fun acceptLanguage (Lio/ktor/server/request/ApplicationRequest;)Ljava/lang/String;
	public static final fun acceptLanguageItems (Lio/ktor/server/request/ApplicationRequest;)Ljava/util/List;
	public static final fun authorization (Lio/ktor/server/request/ApplicationRequest;)Ljava/lang/String;
	public static final fun cacheControl (Lio/ktor/server/request/ApplicationRequest;)Ljava/lang/String;
	public static final fun contentCharset (Lio/ktor/server/request/ApplicationRequest;)Ljava/nio/charset/Charset;
	public static final fun contentLength (Lio/ktor/server/request/ApplicationRequest;)Ljava/lang/Long;
	public static final fun contentType (Lio/ktor/server/request/ApplicationRequest;)Lio/ktor/http/ContentType;
	public static final fun document (Lio/ktor/server/request/ApplicationRequest;)Ljava/lang/String;
	public static final fun getHttpMethod (Lio/ktor/server/request/ApplicationRequest;)Lio/ktor/http/HttpMethod;
	public static final fun getHttpVersion (Lio/ktor/server/request/ApplicationRequest;)Ljava/lang/String;
	public static final fun getUri (Lio/ktor/server/request/ApplicationRequest;)Ljava/lang/String;
	public static final fun header (Lio/ktor/server/request/ApplicationRequest;Ljava/lang/String;)Ljava/lang/String;
	public static final fun host (Lio/ktor/server/request/ApplicationRequest;)Ljava/lang/String;
	public static final fun isChunked (Lio/ktor/server/request/ApplicationRequest;)Z
	public static final fun isMultipart (Lio/ktor/server/request/ApplicationRequest;)Z
	public static final fun location (Lio/ktor/server/request/ApplicationRequest;)Ljava/lang/String;
	public static final fun path (Lio/ktor/server/request/ApplicationRequest;)Ljava/lang/String;
	public static final fun port (Lio/ktor/server/request/ApplicationRequest;)I
	public static final fun queryString (Lio/ktor/server/request/ApplicationRequest;)Ljava/lang/String;
	public static final fun ranges (Lio/ktor/server/request/ApplicationRequest;)Lio/ktor/http/RangesSpecifier;
	public static final fun userAgent (Lio/ktor/server/request/ApplicationRequest;)Ljava/lang/String;
}

public abstract interface class io/ktor/server/request/PipelineRequest : io/ktor/server/request/ApplicationRequest {
	public abstract fun getCall ()Lio/ktor/server/application/PipelineCall;
	public abstract fun getPipeline ()Lio/ktor/server/request/ApplicationReceivePipeline;
	public abstract fun setHeader (Ljava/lang/String;Ljava/util/List;)V
	public abstract fun setReceiveChannel (Lio/ktor/utils/io/ByteReadChannel;)V
}

public final class io/ktor/server/request/PipelineRequestKt {
	public static final fun encodeParameters (Lio/ktor/server/request/ApplicationRequest;Lio/ktor/http/Parameters;)Lio/ktor/http/Parameters;
}

public final class io/ktor/server/request/RequestAlreadyConsumedException : java/lang/IllegalStateException {
	public fun <init> ()V
}

public class io/ktor/server/request/RequestCookies {
	public fun <init> (Lio/ktor/server/request/ApplicationRequest;)V
	protected fun fetchCookies ()Ljava/util/Map;
	public final fun get (Ljava/lang/String;Lio/ktor/http/CookieEncoding;)Ljava/lang/String;
	public static synthetic fun get$default (Lio/ktor/server/request/RequestCookies;Ljava/lang/String;Lio/ktor/http/CookieEncoding;ILjava/lang/Object;)Ljava/lang/String;
	public final fun getRawCookies ()Ljava/util/Map;
	protected final fun getRequest ()Lio/ktor/server/request/ApplicationRequest;
}

public abstract interface class io/ktor/server/response/ApplicationResponse {
	public abstract fun getCall ()Lio/ktor/server/application/ApplicationCall;
	public abstract fun getCookies ()Lio/ktor/server/response/ResponseCookies;
	public abstract fun getHeaders ()Lio/ktor/server/response/ResponseHeaders;
	public abstract fun isCommitted ()Z
	public abstract fun isSent ()Z
	public abstract fun push (Lio/ktor/server/response/ResponsePushBuilder;)V
	public abstract fun status ()Lio/ktor/http/HttpStatusCode;
	public abstract fun status (Lio/ktor/http/HttpStatusCode;)V
}

public final class io/ktor/server/response/ApplicationResponseFunctionsJvmKt {
	public static final fun respondFile (Lio/ktor/server/application/ApplicationCall;Ljava/io/File;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun respondFile (Lio/ktor/server/application/ApplicationCall;Ljava/io/File;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun respondFile$default (Lio/ktor/server/application/ApplicationCall;Ljava/io/File;Ljava/lang/String;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun respondFile$default (Lio/ktor/server/application/ApplicationCall;Ljava/io/File;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun respondOutputStream (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Ljava/lang/Long;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun respondOutputStream (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun respondOutputStream$default (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Ljava/lang/Long;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun respondOutputStream$default (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun respondPath (Lio/ktor/server/application/ApplicationCall;Ljava/nio/file/Path;Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun respondPath (Lio/ktor/server/application/ApplicationCall;Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun respondPath$default (Lio/ktor/server/application/ApplicationCall;Ljava/nio/file/Path;Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun respondPath$default (Lio/ktor/server/application/ApplicationCall;Ljava/nio/file/Path;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun respondTextWriter (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Ljava/lang/Long;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun respondTextWriter (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun respondTextWriter$default (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Ljava/lang/Long;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun respondTextWriter$default (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class io/ktor/server/response/ApplicationResponseFunctionsKt {
	public static final fun defaultTextContentType (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/ContentType;)Lio/ktor/http/ContentType;
	public static final fun respond (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/HttpStatusCode;Ljava/lang/Object;Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun respondBytes (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun respondBytes (Lio/ktor/server/application/ApplicationCall;[BLio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun respondBytes$default (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun respondBytes$default (Lio/ktor/server/application/ApplicationCall;[BLio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun respondBytesWriter (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Ljava/lang/Long;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun respondBytesWriter$default (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Ljava/lang/Long;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun respondRedirect (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/Url;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun respondRedirect (Lio/ktor/server/application/ApplicationCall;Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun respondRedirect (Lio/ktor/server/application/ApplicationCall;ZLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun respondRedirect$default (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/Url;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun respondRedirect$default (Lio/ktor/server/application/ApplicationCall;Ljava/lang/String;ZLkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun respondRedirect$default (Lio/ktor/server/application/ApplicationCall;ZLkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun respondSource (Lio/ktor/server/application/ApplicationCall;Lkotlinx/io/RawSource;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Ljava/lang/Long;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun respondSource$default (Lio/ktor/server/application/ApplicationCall;Lkotlinx/io/RawSource;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Ljava/lang/Long;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static final fun respondText (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun respondText (Lio/ktor/server/application/ApplicationCall;Ljava/lang/String;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static synthetic fun respondText$default (Lio/ktor/server/application/ApplicationCall;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
	public static synthetic fun respondText$default (Lio/ktor/server/application/ApplicationCall;Ljava/lang/String;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
}

public final class io/ktor/server/response/ApplicationResponsePropertiesJvmKt {
	public static final fun expires (Lio/ktor/http/HeadersBuilder;Ljava/time/LocalDateTime;)V
	public static final fun expires (Lio/ktor/server/response/ApplicationResponse;Ljava/time/LocalDateTime;)V
	public static final fun header (Lio/ktor/server/response/ApplicationResponse;Ljava/lang/String;Ljava/time/temporal/Temporal;)V
	public static final fun lastModified (Lio/ktor/http/HeadersBuilder;Ljava/time/ZonedDateTime;)V
	public static final fun lastModified (Lio/ktor/server/response/ApplicationResponse;Ljava/time/ZonedDateTime;)V
}

public final class io/ktor/server/response/ApplicationResponsePropertiesKt {
	public static final fun cacheControl (Lio/ktor/http/HeadersBuilder;Lio/ktor/http/CacheControl;)V
	public static final fun cacheControl (Lio/ktor/server/response/ApplicationResponse;Lio/ktor/http/CacheControl;)V
	public static final fun contentRange (Lio/ktor/http/HeadersBuilder;Lkotlin/ranges/LongRange;Ljava/lang/Long;Ljava/lang/String;)V
	public static final fun contentRange (Lio/ktor/server/response/ApplicationResponse;Lkotlin/ranges/LongRange;Ljava/lang/Long;Lio/ktor/http/RangeUnits;)V
	public static final fun contentRange (Lio/ktor/server/response/ApplicationResponse;Lkotlin/ranges/LongRange;Ljava/lang/Long;Ljava/lang/String;)V
	public static synthetic fun contentRange$default (Lio/ktor/http/HeadersBuilder;Lkotlin/ranges/LongRange;Ljava/lang/Long;Ljava/lang/String;ILjava/lang/Object;)V
	public static synthetic fun contentRange$default (Lio/ktor/server/response/ApplicationResponse;Lkotlin/ranges/LongRange;Ljava/lang/Long;Lio/ktor/http/RangeUnits;ILjava/lang/Object;)V
	public static synthetic fun contentRange$default (Lio/ktor/server/response/ApplicationResponse;Lkotlin/ranges/LongRange;Ljava/lang/Long;Ljava/lang/String;ILjava/lang/Object;)V
	public static final fun etag (Lio/ktor/server/response/ApplicationResponse;Ljava/lang/String;)V
	public static final fun header (Lio/ktor/server/response/ApplicationResponse;Ljava/lang/String;I)V
	public static final fun header (Lio/ktor/server/response/ApplicationResponse;Ljava/lang/String;J)V
	public static final fun header (Lio/ktor/server/response/ApplicationResponse;Ljava/lang/String;Ljava/lang/String;)V
}

public class io/ktor/server/response/ApplicationSendPipeline : io/ktor/util/pipeline/Pipeline {
	public static final field Phases Lio/ktor/server/response/ApplicationSendPipeline$Phases;
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getDevelopmentMode ()Z
}

public final class io/ktor/server/response/ApplicationSendPipeline$Phases {
	public final fun getAfter ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getBefore ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getContentEncoding ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getEngine ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getRender ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getTransferEncoding ()Lio/ktor/util/pipeline/PipelinePhase;
	public final fun getTransform ()Lio/ktor/util/pipeline/PipelinePhase;
}

public final class io/ktor/server/response/DefaultResponsePushBuilder : io/ktor/server/response/ResponsePushBuilder {
	public fun <init> ()V
	public fun <init> (Lio/ktor/http/HttpMethod;Lio/ktor/http/URLBuilder;Lio/ktor/http/HeadersBuilder;Ljava/util/List;)V
	public synthetic fun <init> (Lio/ktor/http/HttpMethod;Lio/ktor/http/URLBuilder;Lio/ktor/http/HeadersBuilder;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lio/ktor/http/URLBuilder;Lio/ktor/http/Headers;)V
	public fun <init> (Lio/ktor/server/application/ApplicationCall;)V
	public fun getHeaders ()Lio/ktor/http/HeadersBuilder;
	public fun getMethod ()Lio/ktor/http/HttpMethod;
	public fun getUrl ()Lio/ktor/http/URLBuilder;
	public fun getVersions ()Ljava/util/ArrayList;
	public synthetic fun getVersions ()Ljava/util/List;
	public fun setMethod (Lio/ktor/http/HttpMethod;)V
	public fun setVersions (Ljava/util/ArrayList;)V
}

public abstract interface class io/ktor/server/response/PipelineResponse : io/ktor/server/response/ApplicationResponse {
	public abstract fun getCall ()Lio/ktor/server/application/PipelineCall;
	public abstract fun getPipeline ()Lio/ktor/server/response/ApplicationSendPipeline;
}

public final class io/ktor/server/response/ResponseCookies {
	public fun <init> (Lio/ktor/server/response/PipelineResponse;)V
	public final fun append (Lio/ktor/http/Cookie;)V
	public final fun append (Ljava/lang/String;Ljava/lang/String;Lio/ktor/http/CookieEncoding;Ljava/lang/Long;Lio/ktor/util/date/GMTDate;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/Map;)V
	public static synthetic fun append$default (Lio/ktor/server/response/ResponseCookies;Ljava/lang/String;Ljava/lang/String;Lio/ktor/http/CookieEncoding;Ljava/lang/Long;Lio/ktor/util/date/GMTDate;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/Map;ILjava/lang/Object;)V
	public final fun appendExpired (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public static synthetic fun appendExpired$default (Lio/ktor/server/response/ResponseCookies;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)V
	public final fun get (Ljava/lang/String;)Lio/ktor/http/Cookie;
}

public abstract class io/ktor/server/response/ResponseHeaders {
	public fun <init> ()V
	public final fun allValues ()Lio/ktor/http/Headers;
	public final fun append (Ljava/lang/String;Ljava/lang/String;Z)V
	public static synthetic fun append$default (Lio/ktor/server/response/ResponseHeaders;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)V
	public final fun contains (Ljava/lang/String;)Z
	protected abstract fun engineAppendHeader (Ljava/lang/String;Ljava/lang/String;)V
	public fun get (Ljava/lang/String;)Ljava/lang/String;
	protected abstract fun getEngineHeaderNames ()Ljava/util/List;
	protected abstract fun getEngineHeaderValues (Ljava/lang/String;)Ljava/util/List;
	protected fun getManagedByEngineHeaders ()Ljava/util/Set;
	public final fun values (Ljava/lang/String;)Ljava/util/List;
}

public final class io/ktor/server/response/ResponseHeadersKt {
	public static final fun appendIfAbsent (Lio/ktor/server/response/ResponseHeaders;Ljava/lang/String;Ljava/lang/String;Z)V
	public static synthetic fun appendIfAbsent$default (Lio/ktor/server/response/ResponseHeaders;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)V
}

public abstract interface class io/ktor/server/response/ResponsePushBuilder {
	public abstract fun getHeaders ()Lio/ktor/http/HeadersBuilder;
	public abstract fun getMethod ()Lio/ktor/http/HttpMethod;
	public abstract fun getUrl ()Lio/ktor/http/URLBuilder;
	public abstract fun getVersions ()Ljava/util/List;
	public abstract fun setMethod (Lio/ktor/http/HttpMethod;)V
}

public final class io/ktor/server/response/ResponseTypeKt {
	public static final fun getResponseType (Lio/ktor/server/response/ApplicationResponse;)Lio/ktor/util/reflect/TypeInfo;
	public static final fun setResponseType (Lio/ktor/server/response/ApplicationResponse;Lio/ktor/util/reflect/TypeInfo;)V
}

public abstract interface annotation class io/ktor/server/response/UseHttp2Push : java/lang/annotation/Annotation {
}

public final class io/ktor/server/routing/AndRouteSelector : io/ktor/server/routing/RouteSelector {
	public fun <init> (Lio/ktor/server/routing/RouteSelector;Lio/ktor/server/routing/RouteSelector;)V
	public final fun component1 ()Lio/ktor/server/routing/RouteSelector;
	public final fun component2 ()Lio/ktor/server/routing/RouteSelector;
	public final fun copy (Lio/ktor/server/routing/RouteSelector;Lio/ktor/server/routing/RouteSelector;)Lio/ktor/server/routing/AndRouteSelector;
	public static synthetic fun copy$default (Lio/ktor/server/routing/AndRouteSelector;Lio/ktor/server/routing/RouteSelector;Lio/ktor/server/routing/RouteSelector;ILjava/lang/Object;)Lio/ktor/server/routing/AndRouteSelector;
	public fun equals (Ljava/lang/Object;)Z
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getFirst ()Lio/ktor/server/routing/RouteSelector;
	public final fun getSecond ()Lio/ktor/server/routing/RouteSelector;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/ConstantParameterRouteSelector : io/ktor/server/routing/RouteSelector {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lio/ktor/server/routing/ConstantParameterRouteSelector;
	public static synthetic fun copy$default (Lio/ktor/server/routing/ConstantParameterRouteSelector;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lio/ktor/server/routing/ConstantParameterRouteSelector;
	public fun equals (Ljava/lang/Object;)Z
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getName ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/HostRouteSelector : io/ktor/server/routing/RouteSelector {
	public static final field Companion Lio/ktor/server/routing/HostRouteSelector$Companion;
	public static final field HostNameParameter Ljava/lang/String;
	public static final field PortParameter Ljava/lang/String;
	public fun <init> (Ljava/util/List;Ljava/util/List;Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;Ljava/util/List;Ljava/util/List;)Lio/ktor/server/routing/HostRouteSelector;
	public static synthetic fun copy$default (Lio/ktor/server/routing/HostRouteSelector;Ljava/util/List;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lio/ktor/server/routing/HostRouteSelector;
	public fun equals (Ljava/lang/Object;)Z
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getHostList ()Ljava/util/List;
	public final fun getHostPatterns ()Ljava/util/List;
	public final fun getPortsList ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/HostRouteSelector$Companion {
}

public final class io/ktor/server/routing/HostsRoutingBuilderKt {
	public static final fun host (Lio/ktor/server/routing/Route;Ljava/lang/String;ILkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static final fun host (Lio/ktor/server/routing/Route;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static final fun host (Lio/ktor/server/routing/Route;Ljava/util/List;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static final fun host (Lio/ktor/server/routing/Route;Lkotlin/text/Regex;ILkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static synthetic fun host$default (Lio/ktor/server/routing/Route;Ljava/lang/String;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/routing/Route;
	public static synthetic fun host$default (Lio/ktor/server/routing/Route;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/routing/Route;
	public static synthetic fun host$default (Lio/ktor/server/routing/Route;Ljava/util/List;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/routing/Route;
	public static synthetic fun host$default (Lio/ktor/server/routing/Route;Lkotlin/text/Regex;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lio/ktor/server/routing/Route;
	public static final fun port (Lio/ktor/server/routing/Route;[ILkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
}

public final class io/ktor/server/routing/HttpAcceptRouteSelector : io/ktor/server/routing/RouteSelector {
	public fun <init> (Lio/ktor/http/ContentType;)V
	public final fun component1 ()Lio/ktor/http/ContentType;
	public final fun copy (Lio/ktor/http/ContentType;)Lio/ktor/server/routing/HttpAcceptRouteSelector;
	public static synthetic fun copy$default (Lio/ktor/server/routing/HttpAcceptRouteSelector;Lio/ktor/http/ContentType;ILjava/lang/Object;)Lio/ktor/server/routing/HttpAcceptRouteSelector;
	public fun equals (Ljava/lang/Object;)Z
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getContentType ()Lio/ktor/http/ContentType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/HttpHeaderRouteSelector : io/ktor/server/routing/RouteSelector {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lio/ktor/server/routing/HttpHeaderRouteSelector;
	public static synthetic fun copy$default (Lio/ktor/server/routing/HttpHeaderRouteSelector;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lio/ktor/server/routing/HttpHeaderRouteSelector;
	public fun equals (Ljava/lang/Object;)Z
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getName ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/HttpMethodRouteSelector : io/ktor/server/routing/RouteSelector {
	public fun <init> (Lio/ktor/http/HttpMethod;)V
	public final fun component1 ()Lio/ktor/http/HttpMethod;
	public final fun copy (Lio/ktor/http/HttpMethod;)Lio/ktor/server/routing/HttpMethodRouteSelector;
	public static synthetic fun copy$default (Lio/ktor/server/routing/HttpMethodRouteSelector;Lio/ktor/http/HttpMethod;ILjava/lang/Object;)Lio/ktor/server/routing/HttpMethodRouteSelector;
	public fun equals (Ljava/lang/Object;)Z
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getMethod ()Lio/ktor/http/HttpMethod;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/HttpMultiAcceptRouteSelector : io/ktor/server/routing/RouteSelector {
	public fun <init> (Ljava/util/List;)V
	public final fun component1 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;)Lio/ktor/server/routing/HttpMultiAcceptRouteSelector;
	public static synthetic fun copy$default (Lio/ktor/server/routing/HttpMultiAcceptRouteSelector;Ljava/util/List;ILjava/lang/Object;)Lio/ktor/server/routing/HttpMultiAcceptRouteSelector;
	public fun equals (Ljava/lang/Object;)Z
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getContentTypes ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/IgnoreTrailingSlashKt {
	public static final fun getIgnoreTrailingSlash ()Lio/ktor/server/application/ApplicationPlugin;
}

public final class io/ktor/server/routing/LocalPortRouteSelector : io/ktor/server/routing/RouteSelector {
	public static final field Companion Lio/ktor/server/routing/LocalPortRouteSelector$Companion;
	public static final field LocalPortParameter Ljava/lang/String;
	public fun <init> (I)V
	public final fun component1 ()I
	public final fun copy (I)Lio/ktor/server/routing/LocalPortRouteSelector;
	public static synthetic fun copy$default (Lio/ktor/server/routing/LocalPortRouteSelector;IILjava/lang/Object;)Lio/ktor/server/routing/LocalPortRouteSelector;
	public fun equals (Ljava/lang/Object;)Z
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getPort ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/LocalPortRouteSelector$Companion {
}

public final class io/ktor/server/routing/LocalPortRoutingBuilderKt {
	public static final fun localPort (Lio/ktor/server/routing/Route;ILkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
}

public final class io/ktor/server/routing/OptionalParameterRouteSelector : io/ktor/server/routing/RouteSelector {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/ktor/server/routing/OptionalParameterRouteSelector;
	public static synthetic fun copy$default (Lio/ktor/server/routing/OptionalParameterRouteSelector;Ljava/lang/String;ILjava/lang/Object;)Lio/ktor/server/routing/OptionalParameterRouteSelector;
	public fun equals (Ljava/lang/Object;)Z
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/OrRouteSelector : io/ktor/server/routing/RouteSelector {
	public fun <init> (Lio/ktor/server/routing/RouteSelector;Lio/ktor/server/routing/RouteSelector;)V
	public final fun component1 ()Lio/ktor/server/routing/RouteSelector;
	public final fun component2 ()Lio/ktor/server/routing/RouteSelector;
	public final fun copy (Lio/ktor/server/routing/RouteSelector;Lio/ktor/server/routing/RouteSelector;)Lio/ktor/server/routing/OrRouteSelector;
	public static synthetic fun copy$default (Lio/ktor/server/routing/OrRouteSelector;Lio/ktor/server/routing/RouteSelector;Lio/ktor/server/routing/RouteSelector;ILjava/lang/Object;)Lio/ktor/server/routing/OrRouteSelector;
	public fun equals (Ljava/lang/Object;)Z
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getFirst ()Lio/ktor/server/routing/RouteSelector;
	public final fun getSecond ()Lio/ktor/server/routing/RouteSelector;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/ParameterRouteSelector : io/ktor/server/routing/RouteSelector {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/ktor/server/routing/ParameterRouteSelector;
	public static synthetic fun copy$default (Lio/ktor/server/routing/ParameterRouteSelector;Ljava/lang/String;ILjava/lang/Object;)Lio/ktor/server/routing/ParameterRouteSelector;
	public fun equals (Ljava/lang/Object;)Z
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/PathSegmentConstantRouteSelector : io/ktor/server/routing/RouteSelector {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/ktor/server/routing/PathSegmentConstantRouteSelector;
	public static synthetic fun copy$default (Lio/ktor/server/routing/PathSegmentConstantRouteSelector;Ljava/lang/String;ILjava/lang/Object;)Lio/ktor/server/routing/PathSegmentConstantRouteSelector;
	public fun equals (Ljava/lang/Object;)Z
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/PathSegmentOptionalParameterRouteSelector : io/ktor/server/routing/RouteSelector {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/ktor/server/routing/PathSegmentOptionalParameterRouteSelector;
	public static synthetic fun copy$default (Lio/ktor/server/routing/PathSegmentOptionalParameterRouteSelector;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lio/ktor/server/routing/PathSegmentOptionalParameterRouteSelector;
	public fun equals (Ljava/lang/Object;)Z
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getName ()Ljava/lang/String;
	public final fun getPrefix ()Ljava/lang/String;
	public final fun getSuffix ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/PathSegmentParameterRouteSelector : io/ktor/server/routing/RouteSelector {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lio/ktor/server/routing/PathSegmentParameterRouteSelector;
	public static synthetic fun copy$default (Lio/ktor/server/routing/PathSegmentParameterRouteSelector;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lio/ktor/server/routing/PathSegmentParameterRouteSelector;
	public fun equals (Ljava/lang/Object;)Z
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getName ()Ljava/lang/String;
	public final fun getPrefix ()Ljava/lang/String;
	public final fun getSuffix ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/PathSegmentRegexRouteSelector : io/ktor/server/routing/RouteSelector {
	public static final field Companion Lio/ktor/server/routing/PathSegmentRegexRouteSelector$Companion;
	public fun <init> (Lkotlin/text/Regex;)V
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/PathSegmentRegexRouteSelector$Companion {
}

public final class io/ktor/server/routing/PathSegmentSelectorBuilder {
	public static final field INSTANCE Lio/ktor/server/routing/PathSegmentSelectorBuilder;
	public final fun parseConstant (Ljava/lang/String;)Lio/ktor/server/routing/RouteSelector;
	public final fun parseName (Ljava/lang/String;)Ljava/lang/String;
	public final fun parseParameter (Ljava/lang/String;)Lio/ktor/server/routing/RouteSelector;
}

public final class io/ktor/server/routing/PathSegmentTailcardRouteSelector : io/ktor/server/routing/RouteSelector {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;)Lio/ktor/server/routing/PathSegmentTailcardRouteSelector;
	public static synthetic fun copy$default (Lio/ktor/server/routing/PathSegmentTailcardRouteSelector;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lio/ktor/server/routing/PathSegmentTailcardRouteSelector;
	public fun equals (Ljava/lang/Object;)Z
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public final fun getName ()Ljava/lang/String;
	public final fun getPrefix ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/PathSegmentWildcardRouteSelector : io/ktor/server/routing/RouteSelector {
	public static final field INSTANCE Lio/ktor/server/routing/PathSegmentWildcardRouteSelector;
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/RegexRoutingKt {
	public static final fun delete (Lio/ktor/server/routing/Route;Lkotlin/text/Regex;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun get (Lio/ktor/server/routing/Route;Lkotlin/text/Regex;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun head (Lio/ktor/server/routing/Route;Lkotlin/text/Regex;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun options (Lio/ktor/server/routing/Route;Lkotlin/text/Regex;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun patch (Lio/ktor/server/routing/Route;Lkotlin/text/Regex;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun post (Lio/ktor/server/routing/Route;Lkotlin/text/Regex;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun put (Lio/ktor/server/routing/Route;Lkotlin/text/Regex;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun route (Lio/ktor/server/routing/Route;Lkotlin/text/Regex;Lio/ktor/http/HttpMethod;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static final fun route (Lio/ktor/server/routing/Route;Lkotlin/text/Regex;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
}

public final class io/ktor/server/routing/RootRouteSelector : io/ktor/server/routing/RouteSelector {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/ktor/server/routing/Route {
	public abstract fun createChild (Lio/ktor/server/routing/RouteSelector;)Lio/ktor/server/routing/Route;
	public abstract fun getAttributes ()Lio/ktor/util/Attributes;
	public abstract fun getEnvironment ()Lio/ktor/server/application/ApplicationEnvironment;
	public abstract fun getParent ()Lio/ktor/server/routing/Route;
	public abstract fun handle (Lkotlin/jvm/functions/Function2;)V
	public abstract fun install (Lio/ktor/server/application/Plugin;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public abstract fun plugin (Lio/ktor/server/application/Plugin;)Ljava/lang/Object;
}

public final class io/ktor/server/routing/Route$DefaultImpls {
	public static synthetic fun install$default (Lio/ktor/server/routing/Route;Lio/ktor/server/application/Plugin;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/Object;
}

public abstract class io/ktor/server/routing/RouteSelector {
	public fun <init> ()V
	public abstract fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class io/ktor/server/routing/RouteSelectorEvaluation {
	public static final field Companion Lio/ktor/server/routing/RouteSelectorEvaluation$Companion;
	public static final field qualityConstant D
	public static final field qualityFailedMethod D
	public static final field qualityFailedParameter D
	public static final field qualityMethodParameter D
	public static final field qualityMissing D
	public static final field qualityParameter D
	public static final field qualityParameterWithPrefixOrSuffix D
	public static final field qualityPathParameter D
	public static final field qualityQueryParameter D
	public static final field qualityTailcard D
	public static final field qualityTransparent D
	public static final field qualityWildcard D
	public synthetic fun <init> (ZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getSucceeded ()Z
}

public final class io/ktor/server/routing/RouteSelectorEvaluation$Companion {
	public final fun getConstant ()Lio/ktor/server/routing/RouteSelectorEvaluation;
	public final fun getConstantPath ()Lio/ktor/server/routing/RouteSelectorEvaluation;
	public final fun getFailed ()Lio/ktor/server/routing/RouteSelectorEvaluation$Failure;
	public final fun getFailedMethod ()Lio/ktor/server/routing/RouteSelectorEvaluation$Failure;
	public final fun getFailedParameter ()Lio/ktor/server/routing/RouteSelectorEvaluation$Failure;
	public final fun getFailedPath ()Lio/ktor/server/routing/RouteSelectorEvaluation$Failure;
	public final fun getMissing ()Lio/ktor/server/routing/RouteSelectorEvaluation;
	public final fun getTransparent ()Lio/ktor/server/routing/RouteSelectorEvaluation;
	public final fun getWildcardPath ()Lio/ktor/server/routing/RouteSelectorEvaluation;
	public final fun invoke (ZDLio/ktor/http/Parameters;I)Lio/ktor/server/routing/RouteSelectorEvaluation;
	public static synthetic fun invoke$default (Lio/ktor/server/routing/RouteSelectorEvaluation$Companion;ZDLio/ktor/http/Parameters;IILjava/lang/Object;)Lio/ktor/server/routing/RouteSelectorEvaluation;
}

public final class io/ktor/server/routing/RouteSelectorEvaluation$Failure : io/ktor/server/routing/RouteSelectorEvaluation {
	public fun <init> (DLio/ktor/http/HttpStatusCode;)V
	public final fun component1 ()D
	public final fun component2 ()Lio/ktor/http/HttpStatusCode;
	public final fun copy (DLio/ktor/http/HttpStatusCode;)Lio/ktor/server/routing/RouteSelectorEvaluation$Failure;
	public static synthetic fun copy$default (Lio/ktor/server/routing/RouteSelectorEvaluation$Failure;DLio/ktor/http/HttpStatusCode;ILjava/lang/Object;)Lio/ktor/server/routing/RouteSelectorEvaluation$Failure;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFailureStatusCode ()Lio/ktor/http/HttpStatusCode;
	public final fun getQuality ()D
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/RouteSelectorEvaluation$Success : io/ktor/server/routing/RouteSelectorEvaluation {
	public fun <init> (DLio/ktor/http/Parameters;I)V
	public synthetic fun <init> (DLio/ktor/http/Parameters;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()D
	public final fun component2 ()Lio/ktor/http/Parameters;
	public final fun component3 ()I
	public final fun copy (DLio/ktor/http/Parameters;I)Lio/ktor/server/routing/RouteSelectorEvaluation$Success;
	public static synthetic fun copy$default (Lio/ktor/server/routing/RouteSelectorEvaluation$Success;DLio/ktor/http/Parameters;IILjava/lang/Object;)Lio/ktor/server/routing/RouteSelectorEvaluation$Success;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getParameters ()Lio/ktor/http/Parameters;
	public final fun getQuality ()D
	public final fun getSegmentIncrement ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/ktor/server/routing/Routing : io/ktor/server/routing/Route {
	public abstract fun trace (Lkotlin/jvm/functions/Function1;)V
}

public final class io/ktor/server/routing/RoutingBuilderKt {
	public static final fun accept (Lio/ktor/server/routing/Route;[Lio/ktor/http/ContentType;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static final fun contentType (Lio/ktor/server/routing/Route;Lio/ktor/http/ContentType;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static final fun createRouteFromPath (Lio/ktor/server/routing/Route;Ljava/lang/String;)Lio/ktor/server/routing/Route;
	public static final fun delete (Lio/ktor/server/routing/Route;Ljava/lang/String;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun delete (Lio/ktor/server/routing/Route;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun get (Lio/ktor/server/routing/Route;Ljava/lang/String;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun get (Lio/ktor/server/routing/Route;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun head (Lio/ktor/server/routing/Route;Ljava/lang/String;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun head (Lio/ktor/server/routing/Route;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun header (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static final fun method (Lio/ktor/server/routing/Route;Lio/ktor/http/HttpMethod;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static final fun optionalParam (Lio/ktor/server/routing/Route;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static final fun options (Lio/ktor/server/routing/Route;Ljava/lang/String;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun options (Lio/ktor/server/routing/Route;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun param (Lio/ktor/server/routing/Route;Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static final fun param (Lio/ktor/server/routing/Route;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static final fun patch (Lio/ktor/server/routing/Route;Ljava/lang/String;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun patch (Lio/ktor/server/routing/Route;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun post (Lio/ktor/server/routing/Route;Ljava/lang/String;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun post (Lio/ktor/server/routing/Route;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun put (Lio/ktor/server/routing/Route;Ljava/lang/String;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun put (Lio/ktor/server/routing/Route;Lkotlin/jvm/functions/Function2;)Lio/ktor/server/routing/Route;
	public static final fun route (Lio/ktor/server/routing/Route;Ljava/lang/String;Lio/ktor/http/HttpMethod;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
	public static final fun route (Lio/ktor/server/routing/Route;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/Route;
}

public final class io/ktor/server/routing/RoutingCall : io/ktor/server/application/ApplicationCall {
	public fun getApplication ()Lio/ktor/server/application/Application;
	public fun getAttributes ()Lio/ktor/util/Attributes;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun getParameters ()Lio/ktor/http/Parameters;
	public final fun getPathParameters ()Lio/ktor/http/Parameters;
	public final fun getPipelineCall ()Lio/ktor/server/routing/RoutingPipelineCall;
	public final fun getQueryParameters ()Lio/ktor/http/Parameters;
	public synthetic fun getRequest ()Lio/ktor/server/request/ApplicationRequest;
	public fun getRequest ()Lio/ktor/server/routing/RoutingRequest;
	public synthetic fun getResponse ()Lio/ktor/server/response/ApplicationResponse;
	public fun getResponse ()Lio/ktor/server/routing/RoutingResponse;
	public final fun getRoute ()Lio/ktor/server/routing/RoutingNode;
	public fun receiveNullable (Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun respond (Ljava/lang/Object;Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/server/routing/RoutingContext {
	public fun <init> (Lio/ktor/server/routing/RoutingCall;)V
	public final fun getCall ()Lio/ktor/server/routing/RoutingCall;
}

public class io/ktor/server/routing/RoutingNode : io/ktor/server/application/ApplicationCallPipeline, io/ktor/server/routing/Route {
	public fun <init> (Lio/ktor/server/routing/RoutingNode;Lio/ktor/server/routing/RouteSelector;ZLio/ktor/server/application/ApplicationEnvironment;)V
	public synthetic fun <init> (Lio/ktor/server/routing/RoutingNode;Lio/ktor/server/routing/RouteSelector;ZLio/ktor/server/application/ApplicationEnvironment;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun afterIntercepted ()V
	public synthetic fun createChild (Lio/ktor/server/routing/RouteSelector;)Lio/ktor/server/routing/Route;
	public fun createChild (Lio/ktor/server/routing/RouteSelector;)Lio/ktor/server/routing/RoutingNode;
	public final fun getChildren ()Ljava/util/List;
	public synthetic fun getParent ()Lio/ktor/server/routing/Route;
	public fun getParent ()Lio/ktor/server/routing/RoutingNode;
	public final fun getSelector ()Lio/ktor/server/routing/RouteSelector;
	public fun handle (Lkotlin/jvm/functions/Function2;)V
	public fun install (Lio/ktor/server/application/Plugin;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun invoke (Lkotlin/jvm/functions/Function1;)V
	public fun plugin (Lio/ktor/server/application/Plugin;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/RoutingNodeKt {
	public static final fun getAllRoutes (Lio/ktor/server/routing/RoutingNode;)Ljava/util/List;
	public static final fun insertPhaseAfter (Lio/ktor/server/routing/Route;Lio/ktor/util/pipeline/PipelinePhase;Lio/ktor/util/pipeline/PipelinePhase;)V
	public static final fun insertPhaseBefore (Lio/ktor/server/routing/Route;Lio/ktor/util/pipeline/PipelinePhase;Lio/ktor/util/pipeline/PipelinePhase;)V
	public static final fun intercept (Lio/ktor/server/routing/Route;Lio/ktor/util/pipeline/PipelinePhase;Lkotlin/jvm/functions/Function3;)V
}

public final class io/ktor/server/routing/RoutingPath {
	public static final field Companion Lio/ktor/server/routing/RoutingPath$Companion;
	public synthetic fun <init> (Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getParts ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/RoutingPath$Companion {
	public final fun getRoot ()Lio/ktor/server/routing/RoutingPath;
	public final fun parse (Ljava/lang/String;)Lio/ktor/server/routing/RoutingPath;
}

public final class io/ktor/server/routing/RoutingPathSegment {
	public fun <init> (Ljava/lang/String;Lio/ktor/server/routing/RoutingPathSegmentKind;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lio/ktor/server/routing/RoutingPathSegmentKind;
	public final fun copy (Ljava/lang/String;Lio/ktor/server/routing/RoutingPathSegmentKind;)Lio/ktor/server/routing/RoutingPathSegment;
	public static synthetic fun copy$default (Lio/ktor/server/routing/RoutingPathSegment;Ljava/lang/String;Lio/ktor/server/routing/RoutingPathSegmentKind;ILjava/lang/Object;)Lio/ktor/server/routing/RoutingPathSegment;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getKind ()Lio/ktor/server/routing/RoutingPathSegmentKind;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/RoutingPathSegmentKind : java/lang/Enum {
	public static final field Constant Lio/ktor/server/routing/RoutingPathSegmentKind;
	public static final field Parameter Lio/ktor/server/routing/RoutingPathSegmentKind;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/server/routing/RoutingPathSegmentKind;
	public static fun values ()[Lio/ktor/server/routing/RoutingPathSegmentKind;
}

public final class io/ktor/server/routing/RoutingPipelineCall : io/ktor/server/application/PipelineCall, kotlinx/coroutines/CoroutineScope {
	public fun <init> (Lio/ktor/server/application/PipelineCall;Lio/ktor/server/routing/RoutingNode;Lkotlin/coroutines/CoroutineContext;Lio/ktor/server/request/ApplicationReceivePipeline;Lio/ktor/server/response/ApplicationSendPipeline;Lio/ktor/http/Parameters;)V
	public fun getApplication ()Lio/ktor/server/application/Application;
	public fun getAttributes ()Lio/ktor/util/Attributes;
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getEngineCall ()Lio/ktor/server/application/PipelineCall;
	public fun getParameters ()Lio/ktor/http/Parameters;
	public final fun getPathParameters ()Lio/ktor/http/Parameters;
	public synthetic fun getRequest ()Lio/ktor/server/request/ApplicationRequest;
	public synthetic fun getRequest ()Lio/ktor/server/request/PipelineRequest;
	public fun getRequest ()Lio/ktor/server/routing/RoutingPipelineRequest;
	public synthetic fun getResponse ()Lio/ktor/server/response/ApplicationResponse;
	public synthetic fun getResponse ()Lio/ktor/server/response/PipelineResponse;
	public fun getResponse ()Lio/ktor/server/routing/RoutingPipelineResponse;
	public final fun getRoute ()Lio/ktor/server/routing/RoutingNode;
	public fun receiveNullable (Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun respond (Ljava/lang/Object;Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/RoutingPipelineRequest : io/ktor/server/request/PipelineRequest {
	public fun <init> (Lio/ktor/server/routing/RoutingPipelineCall;Lio/ktor/server/request/ApplicationReceivePipeline;Lio/ktor/server/request/PipelineRequest;)V
	public synthetic fun getCall ()Lio/ktor/server/application/ApplicationCall;
	public synthetic fun getCall ()Lio/ktor/server/application/PipelineCall;
	public fun getCall ()Lio/ktor/server/routing/RoutingPipelineCall;
	public fun getCookies ()Lio/ktor/server/request/RequestCookies;
	public final fun getEngineRequest ()Lio/ktor/server/request/PipelineRequest;
	public fun getHeaders ()Lio/ktor/http/Headers;
	public fun getLocal ()Lio/ktor/http/RequestConnectionPoint;
	public fun getPipeline ()Lio/ktor/server/request/ApplicationReceivePipeline;
	public fun getQueryParameters ()Lio/ktor/http/Parameters;
	public fun getRawQueryParameters ()Lio/ktor/http/Parameters;
	public fun receiveChannel ()Lio/ktor/utils/io/ByteReadChannel;
	public fun setHeader (Ljava/lang/String;Ljava/util/List;)V
	public fun setReceiveChannel (Lio/ktor/utils/io/ByteReadChannel;)V
}

public final class io/ktor/server/routing/RoutingPipelineResponse : io/ktor/server/response/PipelineResponse {
	public fun <init> (Lio/ktor/server/routing/RoutingPipelineCall;Lio/ktor/server/response/ApplicationSendPipeline;Lio/ktor/server/response/PipelineResponse;)V
	public synthetic fun getCall ()Lio/ktor/server/application/ApplicationCall;
	public synthetic fun getCall ()Lio/ktor/server/application/PipelineCall;
	public fun getCall ()Lio/ktor/server/routing/RoutingPipelineCall;
	public fun getCookies ()Lio/ktor/server/response/ResponseCookies;
	public final fun getEngineResponse ()Lio/ktor/server/response/PipelineResponse;
	public fun getHeaders ()Lio/ktor/server/response/ResponseHeaders;
	public fun getPipeline ()Lio/ktor/server/response/ApplicationSendPipeline;
	public fun isCommitted ()Z
	public fun isSent ()Z
	public fun push (Lio/ktor/server/response/ResponsePushBuilder;)V
	public fun status ()Lio/ktor/http/HttpStatusCode;
	public fun status (Lio/ktor/http/HttpStatusCode;)V
}

public final class io/ktor/server/routing/RoutingRequest : io/ktor/server/request/ApplicationRequest {
	public synthetic fun getCall ()Lio/ktor/server/application/ApplicationCall;
	public fun getCall ()Lio/ktor/server/routing/RoutingCall;
	public fun getCookies ()Lio/ktor/server/request/RequestCookies;
	public fun getHeaders ()Lio/ktor/http/Headers;
	public fun getLocal ()Lio/ktor/http/RequestConnectionPoint;
	public final fun getPathVariables ()Lio/ktor/http/Parameters;
	public fun getQueryParameters ()Lio/ktor/http/Parameters;
	public fun getRawQueryParameters ()Lio/ktor/http/Parameters;
	public fun receiveChannel ()Lio/ktor/utils/io/ByteReadChannel;
}

public final class io/ktor/server/routing/RoutingResolveContext {
	public fun <init> (Lio/ktor/server/routing/RoutingNode;Lio/ktor/server/application/PipelineCall;Ljava/util/List;)V
	public final fun getCall ()Lio/ktor/server/application/PipelineCall;
	public final fun getHasTrailingSlash ()Z
	public final fun getRouting ()Lio/ktor/server/routing/RoutingNode;
	public final fun getSegments ()Ljava/util/List;
	public final fun resolve (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class io/ktor/server/routing/RoutingResolveResult {
	public synthetic fun <init> (Lio/ktor/server/routing/RoutingNode;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public abstract fun getParameters ()Lio/ktor/http/Parameters;
	public final fun getRoute ()Lio/ktor/server/routing/RoutingNode;
}

public final class io/ktor/server/routing/RoutingResolveResult$Failure : io/ktor/server/routing/RoutingResolveResult {
	public fun <init> (Lio/ktor/server/routing/RoutingNode;Ljava/lang/String;)V
	public final fun getErrorStatusCode ()Lio/ktor/http/HttpStatusCode;
	public synthetic fun getParameters ()Lio/ktor/http/Parameters;
	public fun getParameters ()Ljava/lang/Void;
	public final fun getReason ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/RoutingResolveResult$Success : io/ktor/server/routing/RoutingResolveResult {
	public fun <init> (Lio/ktor/server/routing/RoutingNode;Lio/ktor/http/Parameters;)V
	public fun getParameters ()Lio/ktor/http/Parameters;
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/RoutingResolveTrace {
	public fun <init> (Lio/ktor/server/application/PipelineCall;Ljava/util/List;)V
	public final fun addCandidate (Ljava/util/List;)V
	public final fun begin (Lio/ktor/server/routing/RoutingNode;I)V
	public final fun buildText ()Ljava/lang/String;
	public final fun finish (Lio/ktor/server/routing/RoutingNode;ILio/ktor/server/routing/RoutingResolveResult;)V
	public final fun getCall ()Lio/ktor/server/application/PipelineCall;
	public final fun getSegments ()Ljava/util/List;
	public final fun registerFinalResult (Lio/ktor/server/routing/RoutingResolveResult;)V
	public final fun skip (Lio/ktor/server/routing/RoutingNode;ILio/ktor/server/routing/RoutingResolveResult;)V
	public fun toString ()Ljava/lang/String;
}

public class io/ktor/server/routing/RoutingResolveTraceEntry {
	public fun <init> (Lio/ktor/server/routing/RoutingNode;ILio/ktor/server/routing/RoutingResolveResult;)V
	public synthetic fun <init> (Lio/ktor/server/routing/RoutingNode;ILio/ktor/server/routing/RoutingResolveResult;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun append (Lio/ktor/server/routing/RoutingResolveTraceEntry;)V
	public fun buildText (Ljava/lang/StringBuilder;I)V
	public final fun getResult ()Lio/ktor/server/routing/RoutingResolveResult;
	public final fun getRoute ()Lio/ktor/server/routing/RoutingNode;
	public final fun getSegmentIndex ()I
	public final fun setResult (Lio/ktor/server/routing/RoutingResolveResult;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/routing/RoutingResponse : io/ktor/server/response/ApplicationResponse {
	public synthetic fun getCall ()Lio/ktor/server/application/ApplicationCall;
	public fun getCall ()Lio/ktor/server/routing/RoutingCall;
	public fun getCookies ()Lio/ktor/server/response/ResponseCookies;
	public fun getHeaders ()Lio/ktor/server/response/ResponseHeaders;
	public fun isCommitted ()Z
	public fun isSent ()Z
	public fun push (Lio/ktor/server/response/ResponsePushBuilder;)V
	public fun status ()Lio/ktor/http/HttpStatusCode;
	public fun status (Lio/ktor/http/HttpStatusCode;)V
}

public final class io/ktor/server/routing/RoutingRoot : io/ktor/server/routing/RoutingNode, io/ktor/server/routing/Routing {
	public static final field Plugin Lio/ktor/server/routing/RoutingRoot$Plugin;
	public fun <init> (Lio/ktor/server/application/Application;)V
	public final fun getApplication ()Lio/ktor/server/application/Application;
	public final fun interceptor (Lio/ktor/util/pipeline/PipelineContext;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun trace (Lkotlin/jvm/functions/Function1;)V
}

public final class io/ktor/server/routing/RoutingRoot$Plugin : io/ktor/server/application/BaseApplicationPlugin {
	public fun getKey ()Lio/ktor/util/AttributeKey;
	public final fun getRoutingCallFinished ()Lio/ktor/events/EventDefinition;
	public final fun getRoutingCallStarted ()Lio/ktor/events/EventDefinition;
	public fun install (Lio/ktor/server/application/Application;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/RoutingRoot;
	public synthetic fun install (Lio/ktor/util/pipeline/Pipeline;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class io/ktor/server/routing/RoutingRootKt {
	public static final fun getApplication (Lio/ktor/server/routing/Route;)Lio/ktor/server/application/Application;
	public static final fun getRoutingFailureStatusCode ()Lio/ktor/util/AttributeKey;
	public static final fun routing (Lio/ktor/server/application/Application;Lkotlin/jvm/functions/Function1;)Lio/ktor/server/routing/RoutingRoot;
}

public final class io/ktor/server/routing/TrailingSlashRouteSelector : io/ktor/server/routing/RouteSelector {
	public static final field INSTANCE Lio/ktor/server/routing/TrailingSlashRouteSelector;
	public fun evaluate (Lio/ktor/server/routing/RoutingResolveContext;ILkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/util/DateUtilsJvmKt {
	public static final fun getGreenwichMeanTime ()Ljava/time/ZoneId;
	public static final fun toGMTDate (Ljava/time/Instant;)Lio/ktor/util/date/GMTDate;
	public static final fun toGMTDate (Ljava/time/ZonedDateTime;)Lio/ktor/util/date/GMTDate;
	public static final fun toLocalDateTime (Ljava/util/Date;)Ljava/time/LocalDateTime;
	public static final fun toZonedDateTime (Ljava/util/Date;)Ljava/time/ZonedDateTime;
}

public final class io/ktor/server/util/ParametersKt {
	public static final fun getOrFail (Lio/ktor/http/Parameters;Ljava/lang/String;)Ljava/lang/String;
	public static final fun getOrFailImpl (Lio/ktor/http/Parameters;Ljava/lang/String;Lio/ktor/util/reflect/TypeInfo;)Ljava/lang/Object;
}

public final class io/ktor/server/util/PathsKt {
	public static final fun normalizePathComponents (Ljava/util/List;)Ljava/util/List;
}

public final class io/ktor/server/util/URLBuilderKt {
	public static final fun createFromCall (Lio/ktor/http/URLBuilder$Companion;Lio/ktor/server/application/ApplicationCall;)Lio/ktor/http/URLBuilder;
	public static final fun url (Lio/ktor/server/application/ApplicationCall;Lkotlin/jvm/functions/Function1;)Ljava/lang/String;
	public static final fun url (Lkotlin/jvm/functions/Function1;)Ljava/lang/String;
	public static synthetic fun url$default (Lio/ktor/server/application/ApplicationCall;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/lang/String;
}

