public final class io/ktor/server/cio/CIO : io/ktor/server/engine/ApplicationEngineFactory {
	public static final field INSTANCE Lio/ktor/server/cio/CIO;
	public fun configuration (Lkotlin/jvm/functions/Function1;)Lio/ktor/server/cio/CIOApplicationEngine$Configuration;
	public synthetic fun configuration (Lkotlin/jvm/functions/Function1;)Lio/ktor/server/engine/ApplicationEngine$Configuration;
	public fun create (Lio/ktor/server/application/ApplicationEnvironment;Lio/ktor/events/Events;ZLio/ktor/server/cio/CIOApplicationEngine$Configuration;Lkotlin/jvm/functions/Function0;)Lio/ktor/server/cio/CIOApplicationEngine;
	public synthetic fun create (Lio/ktor/server/application/ApplicationEnvironment;Lio/ktor/events/Events;ZLio/ktor/server/engine/ApplicationEngine$Configuration;Lkotlin/jvm/functions/Function0;)Lio/ktor/server/engine/ApplicationEngine;
}

public final class io/ktor/server/cio/CIOApplicationEngine : io/ktor/server/engine/BaseApplicationEngine {
	public fun <init> (Lio/ktor/server/application/ApplicationEnvironment;Lio/ktor/events/Events;ZLio/ktor/server/cio/CIOApplicationEngine$Configuration;Lkotlin/jvm/functions/Function0;)V
	public final fun getConfiguration ()Lio/ktor/server/cio/CIOApplicationEngine$Configuration;
	public fun start (Z)Lio/ktor/server/engine/ApplicationEngine;
	public fun startSuspend (ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun stop (JJ)V
	public fun stopSuspend (JJLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/server/cio/CIOApplicationEngine$Configuration : io/ktor/server/engine/BaseApplicationEngine$Configuration {
	public fun <init> ()V
	public final fun getConnectionIdleTimeoutSeconds ()I
	public final fun getReuseAddress ()Z
	public final fun setConnectionIdleTimeoutSeconds (I)V
	public final fun setReuseAddress (Z)V
}

public final class io/ktor/server/cio/EngineMain {
	public static final field INSTANCE Lio/ktor/server/cio/EngineMain;
	public final fun createServer ([Ljava/lang/String;)Lio/ktor/server/engine/EmbeddedServer;
	public static final fun main ([Ljava/lang/String;)V
}

public final class io/ktor/server/cio/HttpServer {
	public fun <init> (Lkotlinx/coroutines/Job;Lkotlinx/coroutines/Job;Lkotlinx/coroutines/Deferred;)V
	public final fun getAcceptJob ()Lkotlinx/coroutines/Job;
	public final fun getRootServerJob ()Lkotlinx/coroutines/Job;
	public final fun getServerSocket ()Lkotlinx/coroutines/Deferred;
}

public final class io/ktor/server/cio/HttpServerSettings {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;IJZ)V
	public synthetic fun <init> (Ljava/lang/String;IJZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()I
	public final fun component3 ()J
	public final fun component4 ()Z
	public final fun copy (Ljava/lang/String;IJZ)Lio/ktor/server/cio/HttpServerSettings;
	public static synthetic fun copy$default (Lio/ktor/server/cio/HttpServerSettings;Ljava/lang/String;IJZILjava/lang/Object;)Lio/ktor/server/cio/HttpServerSettings;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getConnectionIdleTimeoutSeconds ()J
	public final fun getHost ()Ljava/lang/String;
	public final fun getPort ()I
	public final fun getReuseAddress ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/server/cio/backend/HttpServerKt {
	public static final fun httpServer (Lkotlinx/coroutines/CoroutineScope;Lio/ktor/server/cio/HttpServerSettings;Lkotlin/jvm/functions/Function3;)Lio/ktor/server/cio/HttpServer;
}

public final class io/ktor/server/cio/backend/ServerIncomingConnection {
	public fun <init> (Lio/ktor/utils/io/ByteReadChannel;Lio/ktor/utils/io/ByteWriteChannel;Ljava/net/SocketAddress;Ljava/net/SocketAddress;)V
	public final fun getInput ()Lio/ktor/utils/io/ByteReadChannel;
	public final fun getLocalAddress ()Ljava/net/SocketAddress;
	public final fun getOutput ()Lio/ktor/utils/io/ByteWriteChannel;
	public final fun getRemoteAddress ()Ljava/net/SocketAddress;
}

public final class io/ktor/server/cio/backend/ServerPipelineKt {
	public static final fun startServerConnectionPipeline-exY8QGI (Lkotlinx/coroutines/CoroutineScope;Lio/ktor/server/cio/backend/ServerIncomingConnection;JLkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/Job;
}

public final class io/ktor/server/cio/backend/ServerRequestScope : kotlinx/coroutines/CoroutineScope {
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public final fun getInput ()Lio/ktor/utils/io/ByteReadChannel;
	public final fun getLocalAddress ()Ljava/net/SocketAddress;
	public final fun getOutput ()Lio/ktor/utils/io/ByteWriteChannel;
	public final fun getRemoteAddress ()Ljava/net/SocketAddress;
	public final fun getUpgraded ()Lkotlinx/coroutines/CompletableDeferred;
	public final fun withContext (Lkotlin/coroutines/CoroutineContext;)Lio/ktor/server/cio/backend/ServerRequestScope;
}

