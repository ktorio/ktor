public final class io/ktor/http/ApplicationResponsePropertiesKt {
	public static final fun etag (Lio/ktor/http/HeadersBuilder;Ljava/lang/String;)V
}

public final class io/ktor/http/BadContentTypeFormatException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public abstract class io/ktor/http/CacheControl {
	public fun <init> (Lio/ktor/http/CacheControl$Visibility;)V
	public final fun getVisibility ()Lio/ktor/http/CacheControl$Visibility;
}

public final class io/ktor/http/CacheControl$MaxAge : io/ktor/http/CacheControl {
	public fun <init> (ILjava/lang/Integer;ZZLio/ktor/http/CacheControl$Visibility;)V
	public synthetic fun <init> (ILjava/lang/Integer;ZZLio/ktor/http/CacheControl$Visibility;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMaxAgeSeconds ()I
	public final fun getMustRevalidate ()Z
	public final fun getProxyMaxAgeSeconds ()Ljava/lang/Integer;
	public final fun getProxyRevalidate ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/CacheControl$NoCache : io/ktor/http/CacheControl {
	public fun <init> (Lio/ktor/http/CacheControl$Visibility;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/CacheControl$NoStore : io/ktor/http/CacheControl {
	public fun <init> (Lio/ktor/http/CacheControl$Visibility;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/CacheControl$Visibility : java/lang/Enum {
	public static final field Private Lio/ktor/http/CacheControl$Visibility;
	public static final field Public Lio/ktor/http/CacheControl$Visibility;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/http/CacheControl$Visibility;
	public static fun values ()[Lio/ktor/http/CacheControl$Visibility;
}

public final class io/ktor/http/CodecsKt {
	public static final fun decodeURLPart (Ljava/lang/String;IILjava/nio/charset/Charset;)Ljava/lang/String;
	public static synthetic fun decodeURLPart$default (Ljava/lang/String;IILjava/nio/charset/Charset;ILjava/lang/Object;)Ljava/lang/String;
	public static final fun decodeURLQueryComponent (Ljava/lang/String;IIZLjava/nio/charset/Charset;)Ljava/lang/String;
	public static synthetic fun decodeURLQueryComponent$default (Ljava/lang/String;IIZLjava/nio/charset/Charset;ILjava/lang/Object;)Ljava/lang/String;
	public static final fun encodeOAuth (Ljava/lang/String;)Ljava/lang/String;
	public static final fun encodeURLParameter (Ljava/lang/String;Z)Ljava/lang/String;
	public static synthetic fun encodeURLParameter$default (Ljava/lang/String;ZILjava/lang/Object;)Ljava/lang/String;
	public static final fun encodeURLPath (Ljava/lang/String;ZZ)Ljava/lang/String;
	public static synthetic fun encodeURLPath$default (Ljava/lang/String;ZZILjava/lang/Object;)Ljava/lang/String;
	public static final fun encodeURLPathPart (Ljava/lang/String;)Ljava/lang/String;
	public static final fun encodeURLQueryComponent (Ljava/lang/String;ZZLjava/nio/charset/Charset;)Ljava/lang/String;
	public static synthetic fun encodeURLQueryComponent$default (Ljava/lang/String;ZZLjava/nio/charset/Charset;ILjava/lang/Object;)Ljava/lang/String;
}

public final class io/ktor/http/ContentDisposition : io/ktor/http/HeaderValueWithParameters {
	public static final field Companion Lio/ktor/http/ContentDisposition$Companion;
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDisposition ()Ljava/lang/String;
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun withParameter (Ljava/lang/String;Ljava/lang/String;Z)Lio/ktor/http/ContentDisposition;
	public static synthetic fun withParameter$default (Lio/ktor/http/ContentDisposition;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lio/ktor/http/ContentDisposition;
	public final fun withParameters (Ljava/util/List;)Lio/ktor/http/ContentDisposition;
}

public final class io/ktor/http/ContentDisposition$Companion {
	public final fun getAttachment ()Lio/ktor/http/ContentDisposition;
	public final fun getFile ()Lio/ktor/http/ContentDisposition;
	public final fun getInline ()Lio/ktor/http/ContentDisposition;
	public final fun getMixed ()Lio/ktor/http/ContentDisposition;
	public final fun parse (Ljava/lang/String;)Lio/ktor/http/ContentDisposition;
}

public final class io/ktor/http/ContentDisposition$Parameters {
	public static final field CreationDate Ljava/lang/String;
	public static final field FileName Ljava/lang/String;
	public static final field FileNameAsterisk Ljava/lang/String;
	public static final field Handling Ljava/lang/String;
	public static final field INSTANCE Lio/ktor/http/ContentDisposition$Parameters;
	public static final field ModificationDate Ljava/lang/String;
	public static final field Name Ljava/lang/String;
	public static final field ReadDate Ljava/lang/String;
	public static final field Size Ljava/lang/String;
}

public abstract class io/ktor/http/ContentRange {
}

public final class io/ktor/http/ContentRange$Bounded : io/ktor/http/ContentRange {
	public fun <init> (JJ)V
	public final fun component1 ()J
	public final fun component2 ()J
	public final fun copy (JJ)Lio/ktor/http/ContentRange$Bounded;
	public static synthetic fun copy$default (Lio/ktor/http/ContentRange$Bounded;JJILjava/lang/Object;)Lio/ktor/http/ContentRange$Bounded;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFrom ()J
	public final fun getTo ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/ContentRange$Suffix : io/ktor/http/ContentRange {
	public fun <init> (J)V
	public final fun component1 ()J
	public final fun copy (J)Lio/ktor/http/ContentRange$Suffix;
	public static synthetic fun copy$default (Lio/ktor/http/ContentRange$Suffix;JILjava/lang/Object;)Lio/ktor/http/ContentRange$Suffix;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLastCount ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/ContentRange$TailFrom : io/ktor/http/ContentRange {
	public fun <init> (J)V
	public final fun component1 ()J
	public final fun copy (J)Lio/ktor/http/ContentRange$TailFrom;
	public static synthetic fun copy$default (Lio/ktor/http/ContentRange$TailFrom;JILjava/lang/Object;)Lio/ktor/http/ContentRange$TailFrom;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getFrom ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/ContentRangeKt {
	public static final fun contentRangeHeaderValue (Lkotlin/ranges/LongRange;Ljava/lang/Long;Lio/ktor/http/RangeUnits;)Ljava/lang/String;
	public static final fun contentRangeHeaderValue (Lkotlin/ranges/LongRange;Ljava/lang/Long;Ljava/lang/String;)Ljava/lang/String;
	public static synthetic fun contentRangeHeaderValue$default (Lkotlin/ranges/LongRange;Ljava/lang/Long;Lio/ktor/http/RangeUnits;ILjava/lang/Object;)Ljava/lang/String;
	public static synthetic fun contentRangeHeaderValue$default (Lkotlin/ranges/LongRange;Ljava/lang/Long;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
}

public final class io/ktor/http/ContentType : io/ktor/http/HeaderValueWithParameters {
	public static final field Companion Lio/ktor/http/ContentType$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getContentSubtype ()Ljava/lang/String;
	public final fun getContentType ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun match (Lio/ktor/http/ContentType;)Z
	public final fun match (Ljava/lang/String;)Z
	public final fun withParameter (Ljava/lang/String;Ljava/lang/String;)Lio/ktor/http/ContentType;
	public final fun withoutParameters ()Lio/ktor/http/ContentType;
}

public final class io/ktor/http/ContentType$Application {
	public static final field INSTANCE Lio/ktor/http/ContentType$Application;
	public static final field TYPE Ljava/lang/String;
	public final fun contains (Lio/ktor/http/ContentType;)Z
	public final fun contains (Ljava/lang/CharSequence;)Z
	public final fun getAny ()Lio/ktor/http/ContentType;
	public final fun getAtom ()Lio/ktor/http/ContentType;
	public final fun getCbor ()Lio/ktor/http/ContentType;
	public final fun getDocx ()Lio/ktor/http/ContentType;
	public final fun getFormUrlEncoded ()Lio/ktor/http/ContentType;
	public final fun getGZip ()Lio/ktor/http/ContentType;
	public final fun getHalJson ()Lio/ktor/http/ContentType;
	public final fun getJavaScript ()Lio/ktor/http/ContentType;
	public final fun getJson ()Lio/ktor/http/ContentType;
	public final fun getOctetStream ()Lio/ktor/http/ContentType;
	public final fun getPdf ()Lio/ktor/http/ContentType;
	public final fun getPptx ()Lio/ktor/http/ContentType;
	public final fun getProblemJson ()Lio/ktor/http/ContentType;
	public final fun getProblemXml ()Lio/ktor/http/ContentType;
	public final fun getProtoBuf ()Lio/ktor/http/ContentType;
	public final fun getRss ()Lio/ktor/http/ContentType;
	public final fun getSoap ()Lio/ktor/http/ContentType;
	public final fun getWasm ()Lio/ktor/http/ContentType;
	public final fun getXlsx ()Lio/ktor/http/ContentType;
	public final fun getXml ()Lio/ktor/http/ContentType;
	public final fun getXml_Dtd ()Lio/ktor/http/ContentType;
	public final fun getYaml ()Lio/ktor/http/ContentType;
	public final fun getZip ()Lio/ktor/http/ContentType;
}

public final class io/ktor/http/ContentType$Audio {
	public static final field INSTANCE Lio/ktor/http/ContentType$Audio;
	public static final field TYPE Ljava/lang/String;
	public final fun contains (Lio/ktor/http/ContentType;)Z
	public final fun contains (Ljava/lang/CharSequence;)Z
	public final fun getAny ()Lio/ktor/http/ContentType;
	public final fun getMP4 ()Lio/ktor/http/ContentType;
	public final fun getMPEG ()Lio/ktor/http/ContentType;
	public final fun getOGG ()Lio/ktor/http/ContentType;
}

public final class io/ktor/http/ContentType$Companion {
	public final fun getAny ()Lio/ktor/http/ContentType;
	public final fun parse (Ljava/lang/String;)Lio/ktor/http/ContentType;
}

public final class io/ktor/http/ContentType$Font {
	public static final field INSTANCE Lio/ktor/http/ContentType$Font;
	public static final field TYPE Ljava/lang/String;
	public final fun contains (Lio/ktor/http/ContentType;)Z
	public final fun contains (Ljava/lang/CharSequence;)Z
	public final fun getAny ()Lio/ktor/http/ContentType;
	public final fun getCollection ()Lio/ktor/http/ContentType;
	public final fun getOtf ()Lio/ktor/http/ContentType;
	public final fun getSfnt ()Lio/ktor/http/ContentType;
	public final fun getTtf ()Lio/ktor/http/ContentType;
	public final fun getWoff ()Lio/ktor/http/ContentType;
	public final fun getWoff2 ()Lio/ktor/http/ContentType;
}

public final class io/ktor/http/ContentType$Image {
	public static final field INSTANCE Lio/ktor/http/ContentType$Image;
	public static final field TYPE Ljava/lang/String;
	public final fun contains (Lio/ktor/http/ContentType;)Z
	public final fun contains (Ljava/lang/String;)Z
	public final fun getAny ()Lio/ktor/http/ContentType;
	public final fun getGIF ()Lio/ktor/http/ContentType;
	public final fun getJPEG ()Lio/ktor/http/ContentType;
	public final fun getPNG ()Lio/ktor/http/ContentType;
	public final fun getSVG ()Lio/ktor/http/ContentType;
	public final fun getXIcon ()Lio/ktor/http/ContentType;
}

public final class io/ktor/http/ContentType$Message {
	public static final field INSTANCE Lio/ktor/http/ContentType$Message;
	public static final field TYPE Ljava/lang/String;
	public final fun contains (Lio/ktor/http/ContentType;)Z
	public final fun contains (Ljava/lang/String;)Z
	public final fun getAny ()Lio/ktor/http/ContentType;
	public final fun getHttp ()Lio/ktor/http/ContentType;
}

public final class io/ktor/http/ContentType$MultiPart {
	public static final field INSTANCE Lio/ktor/http/ContentType$MultiPart;
	public static final field TYPE Ljava/lang/String;
	public final fun contains (Lio/ktor/http/ContentType;)Z
	public final fun contains (Ljava/lang/CharSequence;)Z
	public final fun getAlternative ()Lio/ktor/http/ContentType;
	public final fun getAny ()Lio/ktor/http/ContentType;
	public final fun getByteRanges ()Lio/ktor/http/ContentType;
	public final fun getEncrypted ()Lio/ktor/http/ContentType;
	public final fun getFormData ()Lio/ktor/http/ContentType;
	public final fun getMixed ()Lio/ktor/http/ContentType;
	public final fun getRelated ()Lio/ktor/http/ContentType;
	public final fun getSigned ()Lio/ktor/http/ContentType;
}

public final class io/ktor/http/ContentType$Text {
	public static final field INSTANCE Lio/ktor/http/ContentType$Text;
	public static final field TYPE Ljava/lang/String;
	public final fun contains (Lio/ktor/http/ContentType;)Z
	public final fun contains (Ljava/lang/CharSequence;)Z
	public final fun getAny ()Lio/ktor/http/ContentType;
	public final fun getCSS ()Lio/ktor/http/ContentType;
	public final fun getCSV ()Lio/ktor/http/ContentType;
	public final fun getEventStream ()Lio/ktor/http/ContentType;
	public final fun getHtml ()Lio/ktor/http/ContentType;
	public final fun getJavaScript ()Lio/ktor/http/ContentType;
	public final fun getPlain ()Lio/ktor/http/ContentType;
	public final fun getVCard ()Lio/ktor/http/ContentType;
	public final fun getXml ()Lio/ktor/http/ContentType;
}

public final class io/ktor/http/ContentType$Video {
	public static final field INSTANCE Lio/ktor/http/ContentType$Video;
	public static final field TYPE Ljava/lang/String;
	public final fun contains (Lio/ktor/http/ContentType;)Z
	public final fun contains (Ljava/lang/CharSequence;)Z
	public final fun getAny ()Lio/ktor/http/ContentType;
	public final fun getMP4 ()Lio/ktor/http/ContentType;
	public final fun getMPEG ()Lio/ktor/http/ContentType;
	public final fun getOGG ()Lio/ktor/http/ContentType;
	public final fun getQuickTime ()Lio/ktor/http/ContentType;
}

public abstract interface class io/ktor/http/ContentTypeMatcher {
	public abstract fun contains (Lio/ktor/http/ContentType;)Z
}

public final class io/ktor/http/ContentTypesKt {
	public static final fun charset (Lio/ktor/http/HeaderValueWithParameters;)Ljava/nio/charset/Charset;
	public static final fun withCharset (Lio/ktor/http/ContentType;Ljava/nio/charset/Charset;)Lio/ktor/http/ContentType;
	public static final fun withCharsetIfNeeded (Lio/ktor/http/ContentType;Ljava/nio/charset/Charset;)Lio/ktor/http/ContentType;
}

public final class io/ktor/http/Cookie : java/io/Serializable {
	public static final field Companion Lio/ktor/http/Cookie$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lio/ktor/http/CookieEncoding;Ljava/lang/Integer;Lio/ktor/util/date/GMTDate;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/Map;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Lio/ktor/http/CookieEncoding;Ljava/lang/Integer;Lio/ktor/util/date/GMTDate;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()Ljava/util/Map;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Lio/ktor/http/CookieEncoding;
	public final fun component4 ()Ljava/lang/Integer;
	public final fun component5 ()Lio/ktor/util/date/GMTDate;
	public final fun component6 ()Ljava/lang/String;
	public final fun component7 ()Ljava/lang/String;
	public final fun component8 ()Z
	public final fun component9 ()Z
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Lio/ktor/http/CookieEncoding;Ljava/lang/Integer;Lio/ktor/util/date/GMTDate;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/Map;)Lio/ktor/http/Cookie;
	public static synthetic fun copy$default (Lio/ktor/http/Cookie;Ljava/lang/String;Ljava/lang/String;Lio/ktor/http/CookieEncoding;Ljava/lang/Integer;Lio/ktor/util/date/GMTDate;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/Map;ILjava/lang/Object;)Lio/ktor/http/Cookie;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDomain ()Ljava/lang/String;
	public final fun getEncoding ()Lio/ktor/http/CookieEncoding;
	public final fun getExpires ()Lio/ktor/util/date/GMTDate;
	public final fun getExtensions ()Ljava/util/Map;
	public final fun getHttpOnly ()Z
	public final fun getMaxAgeInt ()Ljava/lang/Integer;
	public final fun getName ()Ljava/lang/String;
	public final fun getPath ()Ljava/lang/String;
	public final fun getSecure ()Z
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public synthetic class io/ktor/http/Cookie$$serializer : kotlinx/serialization/internal/GeneratedSerializer {
	public static final field INSTANCE Lio/ktor/http/Cookie$$serializer;
	public final fun childSerializers ()[Lkotlinx/serialization/KSerializer;
	public final fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lio/ktor/http/Cookie;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public final fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public final fun serialize (Lkotlinx/serialization/encoding/Encoder;Lio/ktor/http/Cookie;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class io/ktor/http/Cookie$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class io/ktor/http/CookieEncoding : java/lang/Enum {
	public static final field BASE64_ENCODING Lio/ktor/http/CookieEncoding;
	public static final field DQUOTES Lio/ktor/http/CookieEncoding;
	public static final field RAW Lio/ktor/http/CookieEncoding;
	public static final field URI_ENCODING Lio/ktor/http/CookieEncoding;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/http/CookieEncoding;
	public static fun values ()[Lio/ktor/http/CookieEncoding;
}

public final class io/ktor/http/CookieKt {
	public static final fun decodeCookieValue (Ljava/lang/String;Lio/ktor/http/CookieEncoding;)Ljava/lang/String;
	public static final fun encodeCookieValue (Ljava/lang/String;Lio/ktor/http/CookieEncoding;)Ljava/lang/String;
	public static final fun parseClientCookiesHeader (Ljava/lang/String;Z)Ljava/util/Map;
	public static synthetic fun parseClientCookiesHeader$default (Ljava/lang/String;ZILjava/lang/Object;)Ljava/util/Map;
	public static final fun parseServerSetCookieHeader (Ljava/lang/String;)Lio/ktor/http/Cookie;
	public static final fun renderCookieHeader (Lio/ktor/http/Cookie;)Ljava/lang/String;
	public static final fun renderSetCookieHeader (Lio/ktor/http/Cookie;)Ljava/lang/String;
	public static final fun renderSetCookieHeader (Ljava/lang/String;Ljava/lang/String;Lio/ktor/http/CookieEncoding;Ljava/lang/Integer;Lio/ktor/util/date/GMTDate;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/Map;Z)Ljava/lang/String;
	public static synthetic fun renderSetCookieHeader$default (Ljava/lang/String;Ljava/lang/String;Lio/ktor/http/CookieEncoding;Ljava/lang/Integer;Lio/ktor/util/date/GMTDate;Ljava/lang/String;Ljava/lang/String;ZZLjava/util/Map;ZILjava/lang/Object;)Ljava/lang/String;
}

public final class io/ktor/http/DateUtilsKt {
	public static final fun fromCookieToGmtDate (Ljava/lang/String;)Lio/ktor/util/date/GMTDate;
	public static final fun fromHttpToGmtDate (Ljava/lang/String;)Lio/ktor/util/date/GMTDate;
	public static final fun toHttpDate (Lio/ktor/util/date/GMTDate;)Ljava/lang/String;
}

public final class io/ktor/http/FileContentTypeJvmKt {
	public static final fun defaultForFile (Lio/ktor/http/ContentType$Companion;Ljava/io/File;)Lio/ktor/http/ContentType;
	public static final fun defaultForPath (Lio/ktor/http/ContentType$Companion;Ljava/nio/file/Path;)Lio/ktor/http/ContentType;
}

public final class io/ktor/http/FileContentTypeKt {
	public static final fun defaultForFileExtension (Lio/ktor/http/ContentType$Companion;Ljava/lang/String;)Lio/ktor/http/ContentType;
	public static final fun defaultForFilePath (Lio/ktor/http/ContentType$Companion;Ljava/lang/String;)Lio/ktor/http/ContentType;
	public static final fun fileExtensions (Lio/ktor/http/ContentType;)Ljava/util/List;
	public static final fun fromFileExtension (Lio/ktor/http/ContentType$Companion;Ljava/lang/String;)Ljava/util/List;
	public static final fun fromFilePath (Lio/ktor/http/ContentType$Companion;Ljava/lang/String;)Ljava/util/List;
}

public final class io/ktor/http/HeaderValue {
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Lio/ktor/http/HeaderValue;
	public static synthetic fun copy$default (Lio/ktor/http/HeaderValue;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lio/ktor/http/HeaderValue;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getParams ()Ljava/util/List;
	public final fun getQuality ()D
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/HeaderValueParam {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Z)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Z
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Z)Lio/ktor/http/HeaderValueParam;
	public static synthetic fun copy$default (Lio/ktor/http/HeaderValueParam;Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Lio/ktor/http/HeaderValueParam;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEscapeValue ()Z
	public final fun getName ()Ljava/lang/String;
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class io/ktor/http/HeaderValueWithParameters {
	public static final field Companion Lio/ktor/http/HeaderValueWithParameters$Companion;
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	protected final fun getContent ()Ljava/lang/String;
	public final fun getParameters ()Ljava/util/List;
	public final fun parameter (Ljava/lang/String;)Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/HeaderValueWithParameters$Companion {
	public final fun parse (Ljava/lang/String;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;
}

public final class io/ktor/http/HeaderValueWithParametersKt {
	public static final fun append (Lio/ktor/util/StringValuesBuilder;Ljava/lang/String;Lio/ktor/http/HeaderValueWithParameters;)V
	public static final fun escapeIfNeeded (Ljava/lang/String;)Ljava/lang/String;
	public static final fun quote (Ljava/lang/String;)Ljava/lang/String;
}

public abstract interface class io/ktor/http/Headers : io/ktor/util/StringValues {
	public static final field Companion Lio/ktor/http/Headers$Companion;
}

public final class io/ktor/http/Headers$Companion {
	public final fun build (Lkotlin/jvm/functions/Function1;)Lio/ktor/http/Headers;
	public final fun getEmpty ()Lio/ktor/http/Headers;
}

public final class io/ktor/http/Headers$DefaultImpls {
	public static fun contains (Lio/ktor/http/Headers;Ljava/lang/String;)Z
	public static fun contains (Lio/ktor/http/Headers;Ljava/lang/String;Ljava/lang/String;)Z
	public static fun forEach (Lio/ktor/http/Headers;Lkotlin/jvm/functions/Function2;)V
	public static fun get (Lio/ktor/http/Headers;Ljava/lang/String;)Ljava/lang/String;
}

public final class io/ktor/http/HeadersBuilder : io/ktor/util/StringValuesBuilderImpl {
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun build ()Lio/ktor/http/Headers;
	public synthetic fun build ()Lio/ktor/util/StringValues;
}

public final class io/ktor/http/HeadersImpl : io/ktor/util/StringValuesImpl, io/ktor/http/Headers {
	public fun <init> ()V
	public fun <init> (Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/HeadersKt {
	public static final fun headers (Lkotlin/jvm/functions/Function1;)Lio/ktor/http/Headers;
	public static final fun headersOf ()Lio/ktor/http/Headers;
	public static final fun headersOf (Ljava/lang/String;Ljava/lang/String;)Lio/ktor/http/Headers;
	public static final fun headersOf (Ljava/lang/String;Ljava/util/List;)Lio/ktor/http/Headers;
	public static final fun headersOf ([Lkotlin/Pair;)Lio/ktor/http/Headers;
}

public final class io/ktor/http/HeadersSingleImpl : io/ktor/util/StringValuesSingleImpl, io/ktor/http/Headers {
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/HttpHeaderValueParserKt {
	public static final fun parseAndSortContentTypeHeader (Ljava/lang/String;)Ljava/util/List;
	public static final fun parseAndSortHeader (Ljava/lang/String;)Ljava/util/List;
	public static final fun parseHeaderValue (Ljava/lang/String;)Ljava/util/List;
	public static final fun parseHeaderValue (Ljava/lang/String;Z)Ljava/util/List;
	public static final fun toHeaderParamsList (Ljava/lang/Iterable;)Ljava/util/List;
}

public final class io/ktor/http/HttpHeaders {
	public static final field INSTANCE Lio/ktor/http/HttpHeaders;
	public final fun checkHeaderName (Ljava/lang/String;)V
	public final fun checkHeaderValue (Ljava/lang/String;)V
	public final fun getALPN ()Ljava/lang/String;
	public final fun getAccept ()Ljava/lang/String;
	public final fun getAcceptCharset ()Ljava/lang/String;
	public final fun getAcceptEncoding ()Ljava/lang/String;
	public final fun getAcceptLanguage ()Ljava/lang/String;
	public final fun getAcceptRanges ()Ljava/lang/String;
	public final fun getAccessControlAllowCredentials ()Ljava/lang/String;
	public final fun getAccessControlAllowHeaders ()Ljava/lang/String;
	public final fun getAccessControlAllowMethods ()Ljava/lang/String;
	public final fun getAccessControlAllowOrigin ()Ljava/lang/String;
	public final fun getAccessControlExposeHeaders ()Ljava/lang/String;
	public final fun getAccessControlMaxAge ()Ljava/lang/String;
	public final fun getAccessControlRequestHeaders ()Ljava/lang/String;
	public final fun getAccessControlRequestMethod ()Ljava/lang/String;
	public final fun getAge ()Ljava/lang/String;
	public final fun getAllow ()Ljava/lang/String;
	public final fun getAuthenticationInfo ()Ljava/lang/String;
	public final fun getAuthorization ()Ljava/lang/String;
	public final fun getCacheControl ()Ljava/lang/String;
	public final fun getConnection ()Ljava/lang/String;
	public final fun getContentDisposition ()Ljava/lang/String;
	public final fun getContentEncoding ()Ljava/lang/String;
	public final fun getContentLanguage ()Ljava/lang/String;
	public final fun getContentLength ()Ljava/lang/String;
	public final fun getContentLocation ()Ljava/lang/String;
	public final fun getContentRange ()Ljava/lang/String;
	public final fun getContentType ()Ljava/lang/String;
	public final fun getCookie ()Ljava/lang/String;
	public final fun getDASL ()Ljava/lang/String;
	public final fun getDAV ()Ljava/lang/String;
	public final fun getDate ()Ljava/lang/String;
	public final fun getDepth ()Ljava/lang/String;
	public final fun getDestination ()Ljava/lang/String;
	public final fun getETag ()Ljava/lang/String;
	public final fun getExpect ()Ljava/lang/String;
	public final fun getExpires ()Ljava/lang/String;
	public final fun getForwarded ()Ljava/lang/String;
	public final fun getFrom ()Ljava/lang/String;
	public final fun getHTTP2Settings ()Ljava/lang/String;
	public final fun getHost ()Ljava/lang/String;
	public final fun getIf ()Ljava/lang/String;
	public final fun getIfMatch ()Ljava/lang/String;
	public final fun getIfModifiedSince ()Ljava/lang/String;
	public final fun getIfNoneMatch ()Ljava/lang/String;
	public final fun getIfRange ()Ljava/lang/String;
	public final fun getIfScheduleTagMatch ()Ljava/lang/String;
	public final fun getIfUnmodifiedSince ()Ljava/lang/String;
	public final fun getLastModified ()Ljava/lang/String;
	public final fun getLink ()Ljava/lang/String;
	public final fun getLocation ()Ljava/lang/String;
	public final fun getLockToken ()Ljava/lang/String;
	public final fun getMIMEVersion ()Ljava/lang/String;
	public final fun getMaxForwards ()Ljava/lang/String;
	public final fun getOrderingType ()Ljava/lang/String;
	public final fun getOrigin ()Ljava/lang/String;
	public final fun getOverwrite ()Ljava/lang/String;
	public final fun getPosition ()Ljava/lang/String;
	public final fun getPragma ()Ljava/lang/String;
	public final fun getPrefer ()Ljava/lang/String;
	public final fun getPreferenceApplied ()Ljava/lang/String;
	public final fun getProxyAuthenticate ()Ljava/lang/String;
	public final fun getProxyAuthenticationInfo ()Ljava/lang/String;
	public final fun getProxyAuthorization ()Ljava/lang/String;
	public final fun getPublicKeyPins ()Ljava/lang/String;
	public final fun getPublicKeyPinsReportOnly ()Ljava/lang/String;
	public final fun getRange ()Ljava/lang/String;
	public final fun getReferrer ()Ljava/lang/String;
	public final fun getRetryAfter ()Ljava/lang/String;
	public final fun getSLUG ()Ljava/lang/String;
	public final fun getScheduleReply ()Ljava/lang/String;
	public final fun getScheduleTag ()Ljava/lang/String;
	public final fun getSecWebSocketAccept ()Ljava/lang/String;
	public final fun getSecWebSocketExtensions ()Ljava/lang/String;
	public final fun getSecWebSocketKey ()Ljava/lang/String;
	public final fun getSecWebSocketProtocol ()Ljava/lang/String;
	public final fun getSecWebSocketVersion ()Ljava/lang/String;
	public final fun getServer ()Ljava/lang/String;
	public final fun getSetCookie ()Ljava/lang/String;
	public final fun getStrictTransportSecurity ()Ljava/lang/String;
	public final fun getTE ()Ljava/lang/String;
	public final fun getTimeout ()Ljava/lang/String;
	public final fun getTrailer ()Ljava/lang/String;
	public final fun getTransferEncoding ()Ljava/lang/String;
	public final fun getUnsafeHeaders ()[Ljava/lang/String;
	public final fun getUnsafeHeadersList ()Ljava/util/List;
	public final fun getUpgrade ()Ljava/lang/String;
	public final fun getUserAgent ()Ljava/lang/String;
	public final fun getVary ()Ljava/lang/String;
	public final fun getVia ()Ljava/lang/String;
	public final fun getWWWAuthenticate ()Ljava/lang/String;
	public final fun getWarning ()Ljava/lang/String;
	public final fun getXCorrelationId ()Ljava/lang/String;
	public final fun getXForwardedFor ()Ljava/lang/String;
	public final fun getXForwardedHost ()Ljava/lang/String;
	public final fun getXForwardedPort ()Ljava/lang/String;
	public final fun getXForwardedProto ()Ljava/lang/String;
	public final fun getXForwardedServer ()Ljava/lang/String;
	public final fun getXHttpMethodOverride ()Ljava/lang/String;
	public final fun getXRequestId ()Ljava/lang/String;
	public final fun getXTotalCount ()Ljava/lang/String;
	public final fun isUnsafe (Ljava/lang/String;)Z
}

public abstract interface class io/ktor/http/HttpMessage {
	public abstract fun getHeaders ()Lio/ktor/http/Headers;
}

public abstract interface class io/ktor/http/HttpMessageBuilder {
	public abstract fun getHeaders ()Lio/ktor/http/HeadersBuilder;
}

public final class io/ktor/http/HttpMessagePropertiesJvmKt {
	public static final fun date (Lio/ktor/http/HttpMessage;)Ljava/util/Date;
	public static final fun expires (Lio/ktor/http/HttpMessage;)Ljava/util/Date;
	public static final fun expires (Lio/ktor/http/HttpMessageBuilder;)Ljava/util/Date;
	public static final fun ifModifiedSince (Lio/ktor/http/HttpMessageBuilder;Ljava/util/Date;)V
	public static final fun lastModified (Lio/ktor/http/HttpMessage;)Ljava/util/Date;
	public static final fun lastModified (Lio/ktor/http/HttpMessageBuilder;)Ljava/util/Date;
}

public final class io/ktor/http/HttpMessagePropertiesKt {
	public static final fun cacheControl (Lio/ktor/http/HttpMessage;)Ljava/util/List;
	public static final fun charset (Lio/ktor/http/HttpMessage;)Ljava/nio/charset/Charset;
	public static final fun charset (Lio/ktor/http/HttpMessageBuilder;)Ljava/nio/charset/Charset;
	public static final fun contentLength (Lio/ktor/http/HttpMessage;)Ljava/lang/Long;
	public static final fun contentLength (Lio/ktor/http/HttpMessageBuilder;)Ljava/lang/Long;
	public static final fun contentType (Lio/ktor/http/HttpMessage;)Lio/ktor/http/ContentType;
	public static final fun contentType (Lio/ktor/http/HttpMessageBuilder;)Lio/ktor/http/ContentType;
	public static final fun contentType (Lio/ktor/http/HttpMessageBuilder;Lio/ktor/http/ContentType;)V
	public static final fun cookies (Lio/ktor/http/HttpMessageBuilder;)Ljava/util/List;
	public static final fun etag (Lio/ktor/http/HttpMessage;)Ljava/lang/String;
	public static final fun etag (Lio/ktor/http/HttpMessageBuilder;)Ljava/lang/String;
	public static final fun ifNoneMatch (Lio/ktor/http/HttpMessageBuilder;Ljava/lang/String;)V
	public static final fun maxAge (Lio/ktor/http/HttpMessageBuilder;I)V
	public static final fun setCookie (Lio/ktor/http/HttpMessage;)Ljava/util/List;
	public static final fun userAgent (Lio/ktor/http/HttpMessageBuilder;Ljava/lang/String;)V
	public static final fun vary (Lio/ktor/http/HttpMessage;)Ljava/util/List;
	public static final fun vary (Lio/ktor/http/HttpMessageBuilder;)Ljava/util/List;
}

public final class io/ktor/http/HttpMethod {
	public static final field Companion Lio/ktor/http/HttpMethod$Companion;
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lio/ktor/http/HttpMethod;
	public static synthetic fun copy$default (Lio/ktor/http/HttpMethod;Ljava/lang/String;ILjava/lang/Object;)Lio/ktor/http/HttpMethod;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/HttpMethod$Companion {
	public final fun getDefaultMethods ()Ljava/util/List;
	public final fun getDelete ()Lio/ktor/http/HttpMethod;
	public final fun getGet ()Lio/ktor/http/HttpMethod;
	public final fun getHead ()Lio/ktor/http/HttpMethod;
	public final fun getOptions ()Lio/ktor/http/HttpMethod;
	public final fun getPatch ()Lio/ktor/http/HttpMethod;
	public final fun getPost ()Lio/ktor/http/HttpMethod;
	public final fun getPut ()Lio/ktor/http/HttpMethod;
	public final fun parse (Ljava/lang/String;)Lio/ktor/http/HttpMethod;
}

public final class io/ktor/http/HttpProtocolVersion {
	public static final field Companion Lio/ktor/http/HttpProtocolVersion$Companion;
	public fun <init> (Ljava/lang/String;II)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()I
	public final fun component3 ()I
	public final fun copy (Ljava/lang/String;II)Lio/ktor/http/HttpProtocolVersion;
	public static synthetic fun copy$default (Lio/ktor/http/HttpProtocolVersion;Ljava/lang/String;IIILjava/lang/Object;)Lio/ktor/http/HttpProtocolVersion;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMajor ()I
	public final fun getMinor ()I
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/HttpProtocolVersion$Companion {
	public final fun fromValue (Ljava/lang/String;II)Lio/ktor/http/HttpProtocolVersion;
	public final fun getHTTP_1_0 ()Lio/ktor/http/HttpProtocolVersion;
	public final fun getHTTP_1_1 ()Lio/ktor/http/HttpProtocolVersion;
	public final fun getHTTP_2_0 ()Lio/ktor/http/HttpProtocolVersion;
	public final fun getQUIC ()Lio/ktor/http/HttpProtocolVersion;
	public final fun getSPDY_3 ()Lio/ktor/http/HttpProtocolVersion;
	public final fun parse (Ljava/lang/CharSequence;)Lio/ktor/http/HttpProtocolVersion;
}

public final class io/ktor/http/HttpStatusCode : java/lang/Comparable {
	public static final field Companion Lio/ktor/http/HttpStatusCode$Companion;
	public fun <init> (ILjava/lang/String;)V
	public fun compareTo (Lio/ktor/http/HttpStatusCode;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun component1 ()I
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (ILjava/lang/String;)Lio/ktor/http/HttpStatusCode;
	public static synthetic fun copy$default (Lio/ktor/http/HttpStatusCode;ILjava/lang/String;ILjava/lang/Object;)Lio/ktor/http/HttpStatusCode;
	public final fun description (Ljava/lang/String;)Lio/ktor/http/HttpStatusCode;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDescription ()Ljava/lang/String;
	public final fun getValue ()I
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/HttpStatusCode$Companion {
	public final fun fromValue (I)Lio/ktor/http/HttpStatusCode;
	public final fun getAccepted ()Lio/ktor/http/HttpStatusCode;
	public final fun getAllStatusCodes ()Ljava/util/List;
	public final fun getBadGateway ()Lio/ktor/http/HttpStatusCode;
	public final fun getBadRequest ()Lio/ktor/http/HttpStatusCode;
	public final fun getConflict ()Lio/ktor/http/HttpStatusCode;
	public final fun getContinue ()Lio/ktor/http/HttpStatusCode;
	public final fun getCreated ()Lio/ktor/http/HttpStatusCode;
	public final fun getExpectationFailed ()Lio/ktor/http/HttpStatusCode;
	public final fun getFailedDependency ()Lio/ktor/http/HttpStatusCode;
	public final fun getForbidden ()Lio/ktor/http/HttpStatusCode;
	public final fun getFound ()Lio/ktor/http/HttpStatusCode;
	public final fun getGatewayTimeout ()Lio/ktor/http/HttpStatusCode;
	public final fun getGone ()Lio/ktor/http/HttpStatusCode;
	public final fun getInsufficientStorage ()Lio/ktor/http/HttpStatusCode;
	public final fun getInternalServerError ()Lio/ktor/http/HttpStatusCode;
	public final fun getLengthRequired ()Lio/ktor/http/HttpStatusCode;
	public final fun getLocked ()Lio/ktor/http/HttpStatusCode;
	public final fun getMethodNotAllowed ()Lio/ktor/http/HttpStatusCode;
	public final fun getMovedPermanently ()Lio/ktor/http/HttpStatusCode;
	public final fun getMultiStatus ()Lio/ktor/http/HttpStatusCode;
	public final fun getMultipleChoices ()Lio/ktor/http/HttpStatusCode;
	public final fun getNoContent ()Lio/ktor/http/HttpStatusCode;
	public final fun getNonAuthoritativeInformation ()Lio/ktor/http/HttpStatusCode;
	public final fun getNotAcceptable ()Lio/ktor/http/HttpStatusCode;
	public final fun getNotFound ()Lio/ktor/http/HttpStatusCode;
	public final fun getNotImplemented ()Lio/ktor/http/HttpStatusCode;
	public final fun getNotModified ()Lio/ktor/http/HttpStatusCode;
	public final fun getOK ()Lio/ktor/http/HttpStatusCode;
	public final fun getPartialContent ()Lio/ktor/http/HttpStatusCode;
	public final fun getPayloadTooLarge ()Lio/ktor/http/HttpStatusCode;
	public final fun getPaymentRequired ()Lio/ktor/http/HttpStatusCode;
	public final fun getPermanentRedirect ()Lio/ktor/http/HttpStatusCode;
	public final fun getPreconditionFailed ()Lio/ktor/http/HttpStatusCode;
	public final fun getProcessing ()Lio/ktor/http/HttpStatusCode;
	public final fun getProxyAuthenticationRequired ()Lio/ktor/http/HttpStatusCode;
	public final fun getRequestHeaderFieldTooLarge ()Lio/ktor/http/HttpStatusCode;
	public final fun getRequestTimeout ()Lio/ktor/http/HttpStatusCode;
	public final fun getRequestURITooLong ()Lio/ktor/http/HttpStatusCode;
	public final fun getRequestedRangeNotSatisfiable ()Lio/ktor/http/HttpStatusCode;
	public final fun getResetContent ()Lio/ktor/http/HttpStatusCode;
	public final fun getSeeOther ()Lio/ktor/http/HttpStatusCode;
	public final fun getServiceUnavailable ()Lio/ktor/http/HttpStatusCode;
	public final fun getSwitchProxy ()Lio/ktor/http/HttpStatusCode;
	public final fun getSwitchingProtocols ()Lio/ktor/http/HttpStatusCode;
	public final fun getTemporaryRedirect ()Lio/ktor/http/HttpStatusCode;
	public final fun getTooEarly ()Lio/ktor/http/HttpStatusCode;
	public final fun getTooManyRequests ()Lio/ktor/http/HttpStatusCode;
	public final fun getUnauthorized ()Lio/ktor/http/HttpStatusCode;
	public final fun getUnprocessableEntity ()Lio/ktor/http/HttpStatusCode;
	public final fun getUnsupportedMediaType ()Lio/ktor/http/HttpStatusCode;
	public final fun getUpgradeRequired ()Lio/ktor/http/HttpStatusCode;
	public final fun getUseProxy ()Lio/ktor/http/HttpStatusCode;
	public final fun getVariantAlsoNegotiates ()Lio/ktor/http/HttpStatusCode;
	public final fun getVersionNotSupported ()Lio/ktor/http/HttpStatusCode;
}

public final class io/ktor/http/HttpStatusCodeKt {
	public static final fun isSuccess (Lio/ktor/http/HttpStatusCode;)Z
}

public final class io/ktor/http/HttpUrlEncodedKt {
	public static final fun formUrlEncode (Lio/ktor/http/Parameters;)Ljava/lang/String;
	public static final fun formUrlEncode (Ljava/util/List;)Ljava/lang/String;
	public static final fun formUrlEncodeTo (Lio/ktor/http/Parameters;Ljava/lang/Appendable;)V
	public static final fun formUrlEncodeTo (Ljava/util/List;Ljava/lang/Appendable;)V
	public static final fun parseUrlEncodedParameters (Ljava/lang/String;Ljava/nio/charset/Charset;I)Lio/ktor/http/Parameters;
	public static synthetic fun parseUrlEncodedParameters$default (Ljava/lang/String;Ljava/nio/charset/Charset;IILjava/lang/Object;)Lio/ktor/http/Parameters;
}

public final class io/ktor/http/IllegalHeaderNameException : java/lang/IllegalArgumentException {
	public fun <init> (Ljava/lang/String;I)V
	public final fun getHeaderName ()Ljava/lang/String;
	public final fun getPosition ()I
}

public final class io/ktor/http/IllegalHeaderValueException : java/lang/IllegalArgumentException {
	public fun <init> (Ljava/lang/String;I)V
	public final fun getHeaderValue ()Ljava/lang/String;
	public final fun getPosition ()I
}

public final class io/ktor/http/IpParserKt {
	public static final fun hostIsIp (Ljava/lang/String;)Z
}

public final class io/ktor/http/LinkHeader : io/ktor/http/HeaderValueWithParameters {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public fun <init> (Ljava/lang/String;Ljava/util/List;Lio/ktor/http/ContentType;)V
	public fun <init> (Ljava/lang/String;[Ljava/lang/String;)V
	public final fun getUri ()Ljava/lang/String;
}

public final class io/ktor/http/LinkHeader$Parameters {
	public static final field Anchor Ljava/lang/String;
	public static final field HrefLang Ljava/lang/String;
	public static final field INSTANCE Lio/ktor/http/LinkHeader$Parameters;
	public static final field Media Ljava/lang/String;
	public static final field Rel Ljava/lang/String;
	public static final field Rev Ljava/lang/String;
	public static final field Title Ljava/lang/String;
	public static final field Type Ljava/lang/String;
}

public final class io/ktor/http/LinkHeader$Rel {
	public static final field DnsPrefetch Ljava/lang/String;
	public static final field INSTANCE Lio/ktor/http/LinkHeader$Rel;
	public static final field Next Ljava/lang/String;
	public static final field PreConnect Ljava/lang/String;
	public static final field PreLoad Ljava/lang/String;
	public static final field PreRender Ljava/lang/String;
	public static final field Prefetch Ljava/lang/String;
	public static final field Stylesheet Ljava/lang/String;
}

public abstract interface class io/ktor/http/Parameters : io/ktor/util/StringValues {
	public static final field Companion Lio/ktor/http/Parameters$Companion;
}

public final class io/ktor/http/Parameters$Companion {
	public final fun build (Lkotlin/jvm/functions/Function1;)Lio/ktor/http/Parameters;
	public final fun getEmpty ()Lio/ktor/http/Parameters;
}

public final class io/ktor/http/Parameters$DefaultImpls {
	public static fun contains (Lio/ktor/http/Parameters;Ljava/lang/String;)Z
	public static fun contains (Lio/ktor/http/Parameters;Ljava/lang/String;Ljava/lang/String;)Z
	public static fun forEach (Lio/ktor/http/Parameters;Lkotlin/jvm/functions/Function2;)V
	public static fun get (Lio/ktor/http/Parameters;Ljava/lang/String;)Ljava/lang/String;
}

public abstract interface class io/ktor/http/ParametersBuilder : io/ktor/util/StringValuesBuilder {
	public abstract fun build ()Lio/ktor/http/Parameters;
}

public final class io/ktor/http/ParametersBuilderImpl : io/ktor/util/StringValuesBuilderImpl, io/ktor/http/ParametersBuilder {
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun build ()Lio/ktor/http/Parameters;
	public synthetic fun build ()Lio/ktor/util/StringValues;
}

public final class io/ktor/http/ParametersImpl : io/ktor/util/StringValuesImpl, io/ktor/http/Parameters {
	public fun <init> ()V
	public fun <init> (Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/ParametersKt {
	public static final fun ParametersBuilder (I)Lio/ktor/http/ParametersBuilder;
	public static synthetic fun ParametersBuilder$default (IILjava/lang/Object;)Lio/ktor/http/ParametersBuilder;
	public static final fun parameters (Lkotlin/jvm/functions/Function1;)Lio/ktor/http/Parameters;
	public static final fun parametersOf ()Lio/ktor/http/Parameters;
	public static final fun parametersOf (Ljava/lang/String;Ljava/lang/String;)Lio/ktor/http/Parameters;
	public static final fun parametersOf (Ljava/lang/String;Ljava/util/List;)Lio/ktor/http/Parameters;
	public static final fun parametersOf (Ljava/util/Map;)Lio/ktor/http/Parameters;
	public static final fun parametersOf ([Lkotlin/Pair;)Lio/ktor/http/Parameters;
	public static final fun plus (Lio/ktor/http/Parameters;Lio/ktor/http/Parameters;)Lio/ktor/http/Parameters;
}

public final class io/ktor/http/ParametersSingleImpl : io/ktor/util/StringValuesSingleImpl, io/ktor/http/Parameters {
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/QueryKt {
	public static final fun parseQueryString (Ljava/lang/String;IIZ)Lio/ktor/http/Parameters;
	public static synthetic fun parseQueryString$default (Ljava/lang/String;IIZILjava/lang/Object;)Lio/ktor/http/Parameters;
}

public final class io/ktor/http/RangeUnits : java/lang/Enum {
	public static final field Bytes Lio/ktor/http/RangeUnits;
	public static final field None Lio/ktor/http/RangeUnits;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getUnitToken ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/http/RangeUnits;
	public static fun values ()[Lio/ktor/http/RangeUnits;
}

public final class io/ktor/http/RangesKt {
	public static final fun parseRangesSpecifier (Ljava/lang/String;)Lio/ktor/http/RangesSpecifier;
}

public final class io/ktor/http/RangesSpecifier {
	public fun <init> (Lio/ktor/http/RangeUnits;Ljava/util/List;)V
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/lang/String;Ljava/util/List;)Lio/ktor/http/RangesSpecifier;
	public static synthetic fun copy$default (Lio/ktor/http/RangesSpecifier;Ljava/lang/String;Ljava/util/List;ILjava/lang/Object;)Lio/ktor/http/RangesSpecifier;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getRanges ()Ljava/util/List;
	public final fun getUnit ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isValid (Lkotlin/jvm/functions/Function1;)Z
	public static synthetic fun isValid$default (Lio/ktor/http/RangesSpecifier;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Z
	public final fun merge (J)Ljava/util/List;
	public final fun merge (JI)Ljava/util/List;
	public static synthetic fun merge$default (Lio/ktor/http/RangesSpecifier;JIILjava/lang/Object;)Ljava/util/List;
	public final fun mergeToSingle (J)Lkotlin/ranges/LongRange;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/ktor/http/RequestConnectionPoint {
	public abstract fun getHost ()Ljava/lang/String;
	public abstract fun getLocalAddress ()Ljava/lang/String;
	public abstract fun getLocalHost ()Ljava/lang/String;
	public abstract fun getLocalPort ()I
	public abstract fun getMethod ()Lio/ktor/http/HttpMethod;
	public abstract fun getPort ()I
	public abstract fun getRemoteAddress ()Ljava/lang/String;
	public abstract fun getRemoteHost ()Ljava/lang/String;
	public abstract fun getRemotePort ()I
	public abstract fun getScheme ()Ljava/lang/String;
	public abstract fun getServerHost ()Ljava/lang/String;
	public abstract fun getServerPort ()I
	public abstract fun getUri ()Ljava/lang/String;
	public abstract fun getVersion ()Ljava/lang/String;
}

public final class io/ktor/http/URLBuilder {
	public static final field Companion Lio/ktor/http/URLBuilder$Companion;
	public fun <init> ()V
	public fun <init> (Lio/ktor/http/URLProtocol;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/List;Lio/ktor/http/Parameters;Ljava/lang/String;Z)V
	public synthetic fun <init> (Lio/ktor/http/URLProtocol;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/List;Lio/ktor/http/Parameters;Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun build ()Lio/ktor/http/Url;
	public final fun buildString ()Ljava/lang/String;
	public final fun getEncodedFragment ()Ljava/lang/String;
	public final fun getEncodedParameters ()Lio/ktor/http/ParametersBuilder;
	public final fun getEncodedPassword ()Ljava/lang/String;
	public final fun getEncodedPathSegments ()Ljava/util/List;
	public final fun getEncodedUser ()Ljava/lang/String;
	public final fun getFragment ()Ljava/lang/String;
	public final fun getHost ()Ljava/lang/String;
	public final fun getParameters ()Lio/ktor/http/ParametersBuilder;
	public final fun getPassword ()Ljava/lang/String;
	public final fun getPathSegments ()Ljava/util/List;
	public final fun getPort ()I
	public final fun getProtocol ()Lio/ktor/http/URLProtocol;
	public final fun getProtocolOrNull ()Lio/ktor/http/URLProtocol;
	public final fun getTrailingQuery ()Z
	public final fun getUser ()Ljava/lang/String;
	public final fun setEncodedFragment (Ljava/lang/String;)V
	public final fun setEncodedParameters (Lio/ktor/http/ParametersBuilder;)V
	public final fun setEncodedPassword (Ljava/lang/String;)V
	public final fun setEncodedPathSegments (Ljava/util/List;)V
	public final fun setEncodedUser (Ljava/lang/String;)V
	public final fun setFragment (Ljava/lang/String;)V
	public final fun setHost (Ljava/lang/String;)V
	public final fun setPassword (Ljava/lang/String;)V
	public final fun setPathSegments (Ljava/util/List;)V
	public final fun setPort (I)V
	public final fun setProtocol (Lio/ktor/http/URLProtocol;)V
	public final fun setProtocolOrNull (Lio/ktor/http/URLProtocol;)V
	public final fun setTrailingQuery (Z)V
	public final fun setUser (Ljava/lang/String;)V
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/URLBuilder$Companion {
}

public final class io/ktor/http/URLBuilderJvmKt {
	public static final fun getOrigin (Lio/ktor/http/URLBuilder$Companion;)Ljava/lang/String;
	public static final fun invoke (Lio/ktor/http/Url$Companion;Ljava/lang/String;)Lio/ktor/http/Url;
}

public final class io/ktor/http/URLBuilderKt {
	public static final field DEFAULT_PORT I
	public static final fun appendEncodedPathSegments (Lio/ktor/http/URLBuilder;Ljava/util/List;)Lio/ktor/http/URLBuilder;
	public static final fun appendEncodedPathSegments (Lio/ktor/http/URLBuilder;[Ljava/lang/String;)Lio/ktor/http/URLBuilder;
	public static final fun appendPathSegments (Lio/ktor/http/URLBuilder;Ljava/util/List;Z)Lio/ktor/http/URLBuilder;
	public static final fun appendPathSegments (Lio/ktor/http/URLBuilder;[Ljava/lang/String;Z)Lio/ktor/http/URLBuilder;
	public static synthetic fun appendPathSegments$default (Lio/ktor/http/URLBuilder;Ljava/util/List;ZILjava/lang/Object;)Lio/ktor/http/URLBuilder;
	public static synthetic fun appendPathSegments$default (Lio/ktor/http/URLBuilder;[Ljava/lang/String;ZILjava/lang/Object;)Lio/ktor/http/URLBuilder;
	public static final fun clone (Lio/ktor/http/URLBuilder;)Lio/ktor/http/URLBuilder;
	public static final fun getAuthority (Lio/ktor/http/URLBuilder;)Ljava/lang/String;
	public static final fun getEncodedPath (Lio/ktor/http/URLBuilder;)Ljava/lang/String;
	public static final fun path (Lio/ktor/http/URLBuilder;[Ljava/lang/String;)V
	public static final fun pathComponents (Lio/ktor/http/URLBuilder;Ljava/util/List;)Lio/ktor/http/URLBuilder;
	public static final fun pathComponents (Lio/ktor/http/URLBuilder;[Ljava/lang/String;)Lio/ktor/http/URLBuilder;
	public static final fun set (Lio/ktor/http/URLBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public static synthetic fun set$default (Lio/ktor/http/URLBuilder;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)V
	public static final fun setEncodedPath (Lio/ktor/http/URLBuilder;Ljava/lang/String;)V
}

public final class io/ktor/http/URLDecodeException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public final class io/ktor/http/URLParserException : java/lang/IllegalStateException {
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
}

public final class io/ktor/http/URLParserKt {
	public static final fun takeFrom (Lio/ktor/http/URLBuilder;Ljava/lang/String;)Lio/ktor/http/URLBuilder;
}

public final class io/ktor/http/URLProtocol : java/io/Serializable {
	public static final field Companion Lio/ktor/http/URLProtocol$Companion;
	public fun <init> (Ljava/lang/String;I)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()I
	public final fun copy (Ljava/lang/String;I)Lio/ktor/http/URLProtocol;
	public static synthetic fun copy$default (Lio/ktor/http/URLProtocol;Ljava/lang/String;IILjava/lang/Object;)Lio/ktor/http/URLProtocol;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDefaultPort ()I
	public final fun getName ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/URLProtocol$Companion {
	public final fun createOrDefault (Ljava/lang/String;)Lio/ktor/http/URLProtocol;
	public final fun getByName ()Ljava/util/Map;
	public final fun getHTTP ()Lio/ktor/http/URLProtocol;
	public final fun getHTTPS ()Lio/ktor/http/URLProtocol;
	public final fun getSOCKS ()Lio/ktor/http/URLProtocol;
	public final fun getWS ()Lio/ktor/http/URLProtocol;
	public final fun getWSS ()Lio/ktor/http/URLProtocol;
}

public final class io/ktor/http/URLProtocolKt {
	public static final fun isSecure (Lio/ktor/http/URLProtocol;)Z
	public static final fun isWebsocket (Lio/ktor/http/URLProtocol;)Z
}

public final class io/ktor/http/URLUtilsJvmKt {
	public static final fun Url (Ljava/net/URI;)Lio/ktor/http/Url;
	public static final fun takeFrom (Lio/ktor/http/URLBuilder;Ljava/net/URI;)Lio/ktor/http/URLBuilder;
	public static final fun takeFrom (Lio/ktor/http/URLBuilder;Ljava/net/URL;)Lio/ktor/http/URLBuilder;
	public static final fun toURI (Lio/ktor/http/Url;)Ljava/net/URI;
}

public final class io/ktor/http/URLUtilsKt {
	public static final fun URLBuilder (Lio/ktor/http/URLBuilder;)Lio/ktor/http/URLBuilder;
	public static final fun URLBuilder (Lio/ktor/http/Url;)Lio/ktor/http/URLBuilder;
	public static final fun URLBuilder (Ljava/lang/String;)Lio/ktor/http/URLBuilder;
	public static final fun Url (Lio/ktor/http/URLBuilder;)Lio/ktor/http/Url;
	public static final fun Url (Ljava/lang/String;)Lio/ktor/http/Url;
	public static final fun appendUrlFullPath (Ljava/lang/Appendable;Ljava/lang/String;Lio/ktor/http/ParametersBuilder;Z)V
	public static final fun buildUrl (Lkotlin/jvm/functions/Function1;)Lio/ktor/http/Url;
	public static final fun getFullPath (Lio/ktor/http/Url;)Ljava/lang/String;
	public static final fun getHostWithPort (Lio/ktor/http/Url;)Ljava/lang/String;
	public static final fun getHostWithPortIfSpecified (Lio/ktor/http/Url;)Ljava/lang/String;
	public static final fun isAbsolutePath (Lio/ktor/http/URLBuilder;)Z
	public static final fun isAbsolutePath (Lio/ktor/http/Url;)Z
	public static final fun isRelativePath (Lio/ktor/http/URLBuilder;)Z
	public static final fun isRelativePath (Lio/ktor/http/Url;)Z
	public static final fun parseUrl (Ljava/lang/String;)Lio/ktor/http/Url;
	public static final fun takeFrom (Lio/ktor/http/URLBuilder;Lio/ktor/http/URLBuilder;)Lio/ktor/http/URLBuilder;
	public static final fun takeFrom (Lio/ktor/http/URLBuilder;Lio/ktor/http/Url;)Lio/ktor/http/URLBuilder;
}

public final class io/ktor/http/UnsafeHeaderException : java/lang/IllegalArgumentException {
	public fun <init> (Ljava/lang/String;)V
}

public final class io/ktor/http/Url : java/io/Serializable {
	public static final field Companion Lio/ktor/http/Url$Companion;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEncodedFragment ()Ljava/lang/String;
	public final fun getEncodedPassword ()Ljava/lang/String;
	public final fun getEncodedPath ()Ljava/lang/String;
	public final fun getEncodedPathAndQuery ()Ljava/lang/String;
	public final fun getEncodedQuery ()Ljava/lang/String;
	public final fun getEncodedUser ()Ljava/lang/String;
	public final fun getFragment ()Ljava/lang/String;
	public final fun getHost ()Ljava/lang/String;
	public final fun getParameters ()Lio/ktor/http/Parameters;
	public final fun getPassword ()Ljava/lang/String;
	public final fun getPathSegments ()Ljava/util/List;
	public final fun getPort ()I
	public final fun getProtocol ()Lio/ktor/http/URLProtocol;
	public final fun getProtocolOrNull ()Lio/ktor/http/URLProtocol;
	public final fun getRawSegments ()Ljava/util/List;
	public final fun getSegments ()Ljava/util/List;
	public final fun getSpecifiedPort ()I
	public final fun getTrailingQuery ()Z
	public final fun getUser ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/Url$Companion {
	public final fun serializer ()Lkotlinx/serialization/KSerializer;
}

public final class io/ktor/http/UrlKt {
	public static final fun getAuthority (Lio/ktor/http/Url;)Ljava/lang/String;
	public static final fun getProtocolWithAuthority (Lio/ktor/http/Url;)Ljava/lang/String;
}

public final class io/ktor/http/UrlSerializer : kotlinx/serialization/KSerializer {
	public static final field INSTANCE Lio/ktor/http/UrlSerializer;
	public fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Lio/ktor/http/Url;
	public synthetic fun deserialize (Lkotlinx/serialization/encoding/Decoder;)Ljava/lang/Object;
	public fun getDescriptor ()Lkotlinx/serialization/descriptors/SerialDescriptor;
	public fun serialize (Lkotlinx/serialization/encoding/Encoder;Lio/ktor/http/Url;)V
	public synthetic fun serialize (Lkotlinx/serialization/encoding/Encoder;Ljava/lang/Object;)V
}

public final class io/ktor/http/auth/AuthScheme {
	public static final field Basic Ljava/lang/String;
	public static final field Bearer Ljava/lang/String;
	public static final field Digest Ljava/lang/String;
	public static final field INSTANCE Lio/ktor/http/auth/AuthScheme;
	public static final field Negotiate Ljava/lang/String;
	public static final field OAuth Ljava/lang/String;
}

public final class io/ktor/http/auth/HeaderValueEncoding : java/lang/Enum {
	public static final field QUOTED_ALWAYS Lio/ktor/http/auth/HeaderValueEncoding;
	public static final field QUOTED_WHEN_REQUIRED Lio/ktor/http/auth/HeaderValueEncoding;
	public static final field URI_ENCODE Lio/ktor/http/auth/HeaderValueEncoding;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/http/auth/HeaderValueEncoding;
	public static fun values ()[Lio/ktor/http/auth/HeaderValueEncoding;
}

public abstract class io/ktor/http/auth/HttpAuthHeader {
	public static final field Companion Lio/ktor/http/auth/HttpAuthHeader$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAuthScheme ()Ljava/lang/String;
	public abstract fun render ()Ljava/lang/String;
	public abstract fun render (Lio/ktor/http/auth/HeaderValueEncoding;)Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/auth/HttpAuthHeader$Companion {
	public final fun basicAuthChallenge (Ljava/lang/String;Ljava/nio/charset/Charset;)Lio/ktor/http/auth/HttpAuthHeader$Parameterized;
	public final fun bearerAuthChallenge (Ljava/lang/String;Ljava/lang/String;)Lio/ktor/http/auth/HttpAuthHeader;
	public static synthetic fun bearerAuthChallenge$default (Lio/ktor/http/auth/HttpAuthHeader$Companion;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lio/ktor/http/auth/HttpAuthHeader;
	public final fun digestAuthChallenge (Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;)Lio/ktor/http/auth/HttpAuthHeader$Parameterized;
	public static synthetic fun digestAuthChallenge$default (Lio/ktor/http/auth/HttpAuthHeader$Companion;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/String;ILjava/lang/Object;)Lio/ktor/http/auth/HttpAuthHeader$Parameterized;
}

public final class io/ktor/http/auth/HttpAuthHeader$Parameterized : io/ktor/http/auth/HttpAuthHeader {
	public fun <init> (Ljava/lang/String;Ljava/util/List;Lio/ktor/http/auth/HeaderValueEncoding;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;Lio/ktor/http/auth/HeaderValueEncoding;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/util/Map;Lio/ktor/http/auth/HeaderValueEncoding;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/Map;Lio/ktor/http/auth/HeaderValueEncoding;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEncoding ()Lio/ktor/http/auth/HeaderValueEncoding;
	public final fun getParameters ()Ljava/util/List;
	public fun hashCode ()I
	public final fun parameter (Ljava/lang/String;)Ljava/lang/String;
	public fun render ()Ljava/lang/String;
	public fun render (Lio/ktor/http/auth/HeaderValueEncoding;)Ljava/lang/String;
	public final fun withParameter (Ljava/lang/String;Ljava/lang/String;)Lio/ktor/http/auth/HttpAuthHeader$Parameterized;
	public final fun withReplacedParameter (Ljava/lang/String;Ljava/lang/String;)Lio/ktor/http/auth/HttpAuthHeader$Parameterized;
}

public final class io/ktor/http/auth/HttpAuthHeader$Parameters {
	public static final field Charset Ljava/lang/String;
	public static final field INSTANCE Lio/ktor/http/auth/HttpAuthHeader$Parameters;
	public static final field OAuthCallback Ljava/lang/String;
	public static final field OAuthCallbackConfirmed Ljava/lang/String;
	public static final field OAuthConsumerKey Ljava/lang/String;
	public static final field OAuthNonce Ljava/lang/String;
	public static final field OAuthSignature Ljava/lang/String;
	public static final field OAuthSignatureMethod Ljava/lang/String;
	public static final field OAuthTimestamp Ljava/lang/String;
	public static final field OAuthToken Ljava/lang/String;
	public static final field OAuthTokenSecret Ljava/lang/String;
	public static final field OAuthVerifier Ljava/lang/String;
	public static final field OAuthVersion Ljava/lang/String;
	public static final field Realm Ljava/lang/String;
}

public final class io/ktor/http/auth/HttpAuthHeader$Single : io/ktor/http/auth/HttpAuthHeader {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBlob ()Ljava/lang/String;
	public fun hashCode ()I
	public fun render ()Ljava/lang/String;
	public fun render (Lio/ktor/http/auth/HeaderValueEncoding;)Ljava/lang/String;
}

public final class io/ktor/http/auth/HttpAuthHeaderKt {
	public static final fun parseAuthorizationHeader (Ljava/lang/String;)Lio/ktor/http/auth/HttpAuthHeader;
	public static final fun parseAuthorizationHeaders (Ljava/lang/String;)Ljava/util/List;
}

public final class io/ktor/http/content/ByteArrayContent : io/ktor/http/content/OutgoingContent$ByteArrayContent {
	public fun <init> ([BLio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;)V
	public synthetic fun <init> ([BLio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun bytes ()[B
	public fun getContentLength ()Ljava/lang/Long;
	public fun getContentType ()Lio/ktor/http/ContentType;
	public fun getStatus ()Lio/ktor/http/HttpStatusCode;
}

public final class io/ktor/http/content/CachingOptions {
	public fun <init> ()V
	public fun <init> (Lio/ktor/http/CacheControl;Lio/ktor/util/date/GMTDate;)V
	public synthetic fun <init> (Lio/ktor/http/CacheControl;Lio/ktor/util/date/GMTDate;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lio/ktor/http/CacheControl;
	public final fun component2 ()Lio/ktor/util/date/GMTDate;
	public final fun copy (Lio/ktor/http/CacheControl;Lio/ktor/util/date/GMTDate;)Lio/ktor/http/content/CachingOptions;
	public static synthetic fun copy$default (Lio/ktor/http/content/CachingOptions;Lio/ktor/http/CacheControl;Lio/ktor/util/date/GMTDate;ILjava/lang/Object;)Lio/ktor/http/content/CachingOptions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCacheControl ()Lio/ktor/http/CacheControl;
	public final fun getExpires ()Lio/ktor/util/date/GMTDate;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/content/CachingOptionsKt {
	public static final fun getCaching (Lio/ktor/http/content/OutgoingContent;)Lio/ktor/http/content/CachingOptions;
	public static final fun getCachingProperty ()Lio/ktor/util/AttributeKey;
	public static final fun setCaching (Lio/ktor/http/content/OutgoingContent;Lio/ktor/http/content/CachingOptions;)V
}

public final class io/ktor/http/content/ChannelWriterContent : io/ktor/http/content/OutgoingContent$WriteChannelContent {
	public fun <init> (Lkotlin/jvm/functions/Function2;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Ljava/lang/Long;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function2;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Ljava/lang/Long;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getContentLength ()Ljava/lang/Long;
	public fun getContentType ()Lio/ktor/http/ContentType;
	public fun getStatus ()Lio/ktor/http/HttpStatusCode;
	public fun writeTo (Lio/ktor/utils/io/ByteWriteChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/http/content/CompressedContentKt {
	public static final fun compressed (Lio/ktor/http/content/OutgoingContent;Lio/ktor/util/ContentEncoder;Lkotlin/coroutines/CoroutineContext;)Lio/ktor/http/content/OutgoingContent;
	public static synthetic fun compressed$default (Lio/ktor/http/content/OutgoingContent;Lio/ktor/util/ContentEncoder;Lkotlin/coroutines/CoroutineContext;ILjava/lang/Object;)Lio/ktor/http/content/OutgoingContent;
}

public final class io/ktor/http/content/EntityTagVersion : io/ktor/http/content/Version {
	public static final field Companion Lio/ktor/http/content/EntityTagVersion$Companion;
	public fun <init> (Ljava/lang/String;Z)V
	public fun appendHeadersTo (Lio/ktor/http/HeadersBuilder;)V
	public fun check (Lio/ktor/http/Headers;)Lio/ktor/http/content/VersionCheckResult;
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Z
	public final fun copy (Ljava/lang/String;Z)Lio/ktor/http/content/EntityTagVersion;
	public static synthetic fun copy$default (Lio/ktor/http/content/EntityTagVersion;Ljava/lang/String;ZILjava/lang/Object;)Lio/ktor/http/content/EntityTagVersion;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEtag ()Ljava/lang/String;
	public final fun getWeak ()Z
	public fun hashCode ()I
	public final fun match (Lio/ktor/http/content/EntityTagVersion;)Z
	public final fun match (Ljava/util/List;)Lio/ktor/http/content/VersionCheckResult;
	public final fun noneMatch (Ljava/util/List;)Lio/ktor/http/content/VersionCheckResult;
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/content/EntityTagVersion$Companion {
	public final fun getSTAR ()Lio/ktor/http/content/EntityTagVersion;
	public final fun parse (Ljava/lang/String;)Ljava/util/List;
	public final fun parseSingle (Ljava/lang/String;)Lio/ktor/http/content/EntityTagVersion;
}

public final class io/ktor/http/content/LastModifiedVersion : io/ktor/http/content/Version {
	public fun <init> (Lio/ktor/util/date/GMTDate;)V
	public fun appendHeadersTo (Lio/ktor/http/HeadersBuilder;)V
	public fun check (Lio/ktor/http/Headers;)Lio/ktor/http/content/VersionCheckResult;
	public final fun component1 ()Lio/ktor/util/date/GMTDate;
	public final fun copy (Lio/ktor/util/date/GMTDate;)Lio/ktor/http/content/LastModifiedVersion;
	public static synthetic fun copy$default (Lio/ktor/http/content/LastModifiedVersion;Lio/ktor/util/date/GMTDate;ILjava/lang/Object;)Lio/ktor/http/content/LastModifiedVersion;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getLastModified ()Lio/ktor/util/date/GMTDate;
	public fun hashCode ()I
	public final fun ifModifiedSince (Ljava/util/List;)Z
	public final fun ifUnmodifiedSince (Ljava/util/List;)Z
	public fun toString ()Ljava/lang/String;
}

public abstract interface class io/ktor/http/content/MultiPartData {
	public abstract fun readPart (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/http/content/MultiPartData$Empty : io/ktor/http/content/MultiPartData {
	public static final field INSTANCE Lio/ktor/http/content/MultiPartData$Empty;
	public fun readPart (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/http/content/MultipartJvmKt {
	public static final fun getStreamProvider (Lio/ktor/http/content/PartData$FileItem;)Lkotlin/jvm/functions/Function0;
}

public final class io/ktor/http/content/MultipartKt {
	public static final fun asFlow (Lio/ktor/http/content/MultiPartData;)Lkotlinx/coroutines/flow/Flow;
	public static final fun forEachPart (Lio/ktor/http/content/MultiPartData;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public static final fun readAllParts (Lio/ktor/http/content/MultiPartData;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/http/content/NullBody {
	public static final field INSTANCE Lio/ktor/http/content/NullBody;
}

public abstract class io/ktor/http/content/OutgoingContent {
	public fun getContentLength ()Ljava/lang/Long;
	public fun getContentType ()Lio/ktor/http/ContentType;
	public fun getHeaders ()Lio/ktor/http/Headers;
	public fun getProperty (Lio/ktor/util/AttributeKey;)Ljava/lang/Object;
	public fun getStatus ()Lio/ktor/http/HttpStatusCode;
	public fun setProperty (Lio/ktor/util/AttributeKey;Ljava/lang/Object;)V
	public fun trailers ()Lio/ktor/http/Headers;
}

public abstract class io/ktor/http/content/OutgoingContent$ByteArrayContent : io/ktor/http/content/OutgoingContent {
	public fun <init> ()V
	public abstract fun bytes ()[B
}

public abstract class io/ktor/http/content/OutgoingContent$ContentWrapper : io/ktor/http/content/OutgoingContent {
	public fun <init> (Lio/ktor/http/content/OutgoingContent;)V
	public abstract fun copy (Lio/ktor/http/content/OutgoingContent;)Lio/ktor/http/content/OutgoingContent$ContentWrapper;
	public final fun delegate ()Lio/ktor/http/content/OutgoingContent;
	public fun getContentLength ()Ljava/lang/Long;
	public fun getContentType ()Lio/ktor/http/ContentType;
	public fun getHeaders ()Lio/ktor/http/Headers;
	public fun getProperty (Lio/ktor/util/AttributeKey;)Ljava/lang/Object;
	public fun getStatus ()Lio/ktor/http/HttpStatusCode;
	public fun setProperty (Lio/ktor/util/AttributeKey;Ljava/lang/Object;)V
}

public abstract class io/ktor/http/content/OutgoingContent$NoContent : io/ktor/http/content/OutgoingContent {
	public fun <init> ()V
}

public abstract class io/ktor/http/content/OutgoingContent$ProtocolUpgrade : io/ktor/http/content/OutgoingContent {
	public fun <init> ()V
	public final fun getStatus ()Lio/ktor/http/HttpStatusCode;
	public abstract fun upgrade (Lio/ktor/utils/io/ByteReadChannel;Lio/ktor/utils/io/ByteWriteChannel;Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class io/ktor/http/content/OutgoingContent$ReadChannelContent : io/ktor/http/content/OutgoingContent {
	public fun <init> ()V
	public abstract fun readFrom ()Lio/ktor/utils/io/ByteReadChannel;
	public fun readFrom (Lkotlin/ranges/LongRange;)Lio/ktor/utils/io/ByteReadChannel;
}

public abstract class io/ktor/http/content/OutgoingContent$WriteChannelContent : io/ktor/http/content/OutgoingContent {
	public fun <init> ()V
	public abstract fun writeTo (Lio/ktor/utils/io/ByteWriteChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/http/content/OutgoingContentKt {
	public static final fun isEmpty (Lio/ktor/http/content/OutgoingContent;)Z
}

public final class io/ktor/http/content/OutputStreamContent : io/ktor/http/content/OutgoingContent$WriteChannelContent {
	public fun <init> (Lkotlin/jvm/functions/Function2;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Ljava/lang/Long;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function2;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Ljava/lang/Long;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getContentLength ()Ljava/lang/Long;
	public fun getContentType ()Lio/ktor/http/ContentType;
	public fun getStatus ()Lio/ktor/http/HttpStatusCode;
	public fun writeTo (Lio/ktor/utils/io/ByteWriteChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public abstract class io/ktor/http/content/PartData {
	public synthetic fun <init> (Lkotlin/jvm/functions/Function0;Lio/ktor/http/Headers;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getContentDisposition ()Lio/ktor/http/ContentDisposition;
	public final fun getContentType ()Lio/ktor/http/ContentType;
	public final fun getDispose ()Lkotlin/jvm/functions/Function0;
	public final fun getHeaders ()Lio/ktor/http/Headers;
	public final fun getName ()Ljava/lang/String;
}

public final class io/ktor/http/content/PartData$BinaryChannelItem : io/ktor/http/content/PartData {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lio/ktor/http/Headers;)V
	public final fun getProvider ()Lkotlin/jvm/functions/Function0;
}

public final class io/ktor/http/content/PartData$BinaryItem : io/ktor/http/content/PartData {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lio/ktor/http/Headers;)V
	public final fun getProvider ()Lkotlin/jvm/functions/Function0;
}

public final class io/ktor/http/content/PartData$FileItem : io/ktor/http/content/PartData {
	public fun <init> (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lio/ktor/http/Headers;)V
	public final fun getOriginalFileName ()Ljava/lang/String;
	public final fun getProvider ()Lkotlin/jvm/functions/Function0;
}

public final class io/ktor/http/content/PartData$FormItem : io/ktor/http/content/PartData {
	public fun <init> (Ljava/lang/String;Lkotlin/jvm/functions/Function0;Lio/ktor/http/Headers;)V
	public final fun getValue ()Ljava/lang/String;
}

public final class io/ktor/http/content/TextContent : io/ktor/http/content/OutgoingContent$ByteArrayContent {
	public fun <init> (Ljava/lang/String;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;)V
	public synthetic fun <init> (Ljava/lang/String;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun bytes ()[B
	public fun getContentLength ()Ljava/lang/Long;
	public fun getContentType ()Lio/ktor/http/ContentType;
	public fun getStatus ()Lio/ktor/http/HttpStatusCode;
	public final fun getText ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class io/ktor/http/content/URIFileContent : io/ktor/http/content/OutgoingContent$ReadChannelContent {
	public fun <init> (Ljava/net/URI;Lio/ktor/http/ContentType;Ljava/lang/Long;)V
	public synthetic fun <init> (Ljava/net/URI;Lio/ktor/http/ContentType;Ljava/lang/Long;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Ljava/net/URL;Lio/ktor/http/ContentType;)V
	public synthetic fun <init> (Ljava/net/URL;Lio/ktor/http/ContentType;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getContentLength ()Ljava/lang/Long;
	public fun getContentType ()Lio/ktor/http/ContentType;
	public final fun getUri ()Ljava/net/URI;
	public fun readFrom ()Lio/ktor/utils/io/ByteReadChannel;
}

public abstract interface class io/ktor/http/content/Version {
	public abstract fun appendHeadersTo (Lio/ktor/http/HeadersBuilder;)V
	public abstract fun check (Lio/ktor/http/Headers;)Lio/ktor/http/content/VersionCheckResult;
}

public final class io/ktor/http/content/VersionCheckResult : java/lang/Enum {
	public static final field NOT_MODIFIED Lio/ktor/http/content/VersionCheckResult;
	public static final field OK Lio/ktor/http/content/VersionCheckResult;
	public static final field PRECONDITION_FAILED Lio/ktor/http/content/VersionCheckResult;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getStatusCode ()Lio/ktor/http/HttpStatusCode;
	public static fun valueOf (Ljava/lang/String;)Lio/ktor/http/content/VersionCheckResult;
	public static fun values ()[Lio/ktor/http/content/VersionCheckResult;
}

public final class io/ktor/http/content/VersionsJvmKt {
	public static final fun LastModifiedVersion (Ljava/util/Date;)Lio/ktor/http/content/LastModifiedVersion;
}

public final class io/ktor/http/content/VersionsKt {
	public static final fun EntityTagVersion (Ljava/lang/String;)Lio/ktor/http/content/EntityTagVersion;
	public static final fun getVersionListProperty ()Lio/ktor/util/AttributeKey;
	public static final fun getVersions (Lio/ktor/http/content/OutgoingContent;)Ljava/util/List;
	public static final fun setVersions (Lio/ktor/http/content/OutgoingContent;Ljava/util/List;)V
}

public final class io/ktor/http/content/WriterContent : io/ktor/http/content/OutgoingContent$WriteChannelContent {
	public fun <init> (Lkotlin/jvm/functions/Function2;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Ljava/lang/Long;)V
	public synthetic fun <init> (Lkotlin/jvm/functions/Function2;Lio/ktor/http/ContentType;Lio/ktor/http/HttpStatusCode;Ljava/lang/Long;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getContentLength ()Ljava/lang/Long;
	public fun getContentType ()Lio/ktor/http/ContentType;
	public fun getStatus ()Lio/ktor/http/HttpStatusCode;
	public fun writeTo (Lio/ktor/utils/io/ByteWriteChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/ktor/http/header/AcceptEncoding : io/ktor/http/HeaderValueWithParameters {
	public static final field Companion Lio/ktor/http/header/AcceptEncoding$Companion;
	public fun <init> (Ljava/lang/String;D)V
	public fun <init> (Ljava/lang/String;Ljava/util/List;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getAcceptEncoding ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun match (Lio/ktor/http/header/AcceptEncoding;)Z
	public final fun withQValue (D)Lio/ktor/http/header/AcceptEncoding;
}

public final class io/ktor/http/header/AcceptEncoding$Companion {
	public final fun getAll ()Lio/ktor/http/header/AcceptEncoding;
	public final fun getBr ()Lio/ktor/http/header/AcceptEncoding;
	public final fun getCompress ()Lio/ktor/http/header/AcceptEncoding;
	public final fun getDeflate ()Lio/ktor/http/header/AcceptEncoding;
	public final fun getGzip ()Lio/ktor/http/header/AcceptEncoding;
	public final fun getIdentity ()Lio/ktor/http/header/AcceptEncoding;
	public final fun getZstd ()Lio/ktor/http/header/AcceptEncoding;
	public final fun mergeAcceptEncodings ([Lio/ktor/http/header/AcceptEncoding;)Ljava/lang/String;
}

public final class io/ktor/http/parsing/ParseException : java/lang/IllegalArgumentException {
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/Throwable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun getCause ()Ljava/lang/Throwable;
	public fun getMessage ()Ljava/lang/String;
}

public final class io/ktor/http/websocket/UtilsKt {
	public static final fun websocketServerAccept (Ljava/lang/String;)Ljava/lang/String;
}

